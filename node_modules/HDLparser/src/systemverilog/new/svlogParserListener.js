// Generated from ./src/systemverilog/new/svlogParser.g4 by ANTLR 4.7.2
// jshint ignore: start
var antlr4 = require('antlr4/index');

// This class defines a complete listener for a parse tree produced by svlogParser.
function svlogParserListener() {
	antlr4.tree.ParseTreeListener.call(this);
	return this;
}

svlogParserListener.prototype = Object.create(antlr4.tree.ParseTreeListener.prototype);
svlogParserListener.prototype.constructor = svlogParserListener;

// Enter a parse tree produced by svlogParser#library_text.
svlogParserListener.prototype.enterLibrary_text = function(ctx) {
};

// Exit a parse tree produced by svlogParser#library_text.
svlogParserListener.prototype.exitLibrary_text = function(ctx) {
};


// Enter a parse tree produced by svlogParser#library_description.
svlogParserListener.prototype.enterLibrary_description = function(ctx) {
};

// Exit a parse tree produced by svlogParser#library_description.
svlogParserListener.prototype.exitLibrary_description = function(ctx) {
};


// Enter a parse tree produced by svlogParser#library_declaration.
svlogParserListener.prototype.enterLibrary_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#library_declaration.
svlogParserListener.prototype.exitLibrary_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#include_statement.
svlogParserListener.prototype.enterInclude_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#include_statement.
svlogParserListener.prototype.exitInclude_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#file_path_spec.
svlogParserListener.prototype.enterFile_path_spec = function(ctx) {
};

// Exit a parse tree produced by svlogParser#file_path_spec.
svlogParserListener.prototype.exitFile_path_spec = function(ctx) {
};


// Enter a parse tree produced by svlogParser#parse.
svlogParserListener.prototype.enterParse = function(ctx) {
};

// Exit a parse tree produced by svlogParser#parse.
svlogParserListener.prototype.exitParse = function(ctx) {
};


// Enter a parse tree produced by svlogParser#description.
svlogParserListener.prototype.enterDescription = function(ctx) {
};

// Exit a parse tree produced by svlogParser#description.
svlogParserListener.prototype.exitDescription = function(ctx) {
};


// Enter a parse tree produced by svlogParser#module_nonansi_header.
svlogParserListener.prototype.enterModule_nonansi_header = function(ctx) {
};

// Exit a parse tree produced by svlogParser#module_nonansi_header.
svlogParserListener.prototype.exitModule_nonansi_header = function(ctx) {
};


// Enter a parse tree produced by svlogParser#module_ansi_header.
svlogParserListener.prototype.enterModule_ansi_header = function(ctx) {
};

// Exit a parse tree produced by svlogParser#module_ansi_header.
svlogParserListener.prototype.exitModule_ansi_header = function(ctx) {
};


// Enter a parse tree produced by svlogParser#module_declaration.
svlogParserListener.prototype.enterModule_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#module_declaration.
svlogParserListener.prototype.exitModule_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#module_keyword.
svlogParserListener.prototype.enterModule_keyword = function(ctx) {
};

// Exit a parse tree produced by svlogParser#module_keyword.
svlogParserListener.prototype.exitModule_keyword = function(ctx) {
};


// Enter a parse tree produced by svlogParser#interface_declaration.
svlogParserListener.prototype.enterInterface_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#interface_declaration.
svlogParserListener.prototype.exitInterface_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#interface_nonansi_header.
svlogParserListener.prototype.enterInterface_nonansi_header = function(ctx) {
};

// Exit a parse tree produced by svlogParser#interface_nonansi_header.
svlogParserListener.prototype.exitInterface_nonansi_header = function(ctx) {
};


// Enter a parse tree produced by svlogParser#interface_ansi_header.
svlogParserListener.prototype.enterInterface_ansi_header = function(ctx) {
};

// Exit a parse tree produced by svlogParser#interface_ansi_header.
svlogParserListener.prototype.exitInterface_ansi_header = function(ctx) {
};


// Enter a parse tree produced by svlogParser#program_declaration.
svlogParserListener.prototype.enterProgram_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#program_declaration.
svlogParserListener.prototype.exitProgram_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#program_nonansi_header.
svlogParserListener.prototype.enterProgram_nonansi_header = function(ctx) {
};

// Exit a parse tree produced by svlogParser#program_nonansi_header.
svlogParserListener.prototype.exitProgram_nonansi_header = function(ctx) {
};


// Enter a parse tree produced by svlogParser#program_ansi_header.
svlogParserListener.prototype.enterProgram_ansi_header = function(ctx) {
};

// Exit a parse tree produced by svlogParser#program_ansi_header.
svlogParserListener.prototype.exitProgram_ansi_header = function(ctx) {
};


// Enter a parse tree produced by svlogParser#checker_declaration.
svlogParserListener.prototype.enterChecker_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#checker_declaration.
svlogParserListener.prototype.exitChecker_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#class_declaration.
svlogParserListener.prototype.enterClass_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#class_declaration.
svlogParserListener.prototype.exitClass_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#interface_class_type.
svlogParserListener.prototype.enterInterface_class_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#interface_class_type.
svlogParserListener.prototype.exitInterface_class_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#interface_class_declaration.
svlogParserListener.prototype.enterInterface_class_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#interface_class_declaration.
svlogParserListener.prototype.exitInterface_class_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#interface_class_item.
svlogParserListener.prototype.enterInterface_class_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#interface_class_item.
svlogParserListener.prototype.exitInterface_class_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#interface_class_method.
svlogParserListener.prototype.enterInterface_class_method = function(ctx) {
};

// Exit a parse tree produced by svlogParser#interface_class_method.
svlogParserListener.prototype.exitInterface_class_method = function(ctx) {
};


// Enter a parse tree produced by svlogParser#package_declaration.
svlogParserListener.prototype.enterPackage_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#package_declaration.
svlogParserListener.prototype.exitPackage_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#timeunits_declaration.
svlogParserListener.prototype.enterTimeunits_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#timeunits_declaration.
svlogParserListener.prototype.exitTimeunits_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#parameter_port_list.
svlogParserListener.prototype.enterParameter_port_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#parameter_port_list.
svlogParserListener.prototype.exitParameter_port_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#parameter_port_declaration.
svlogParserListener.prototype.enterParameter_port_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#parameter_port_declaration.
svlogParserListener.prototype.exitParameter_port_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_ports.
svlogParserListener.prototype.enterList_of_ports = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_ports.
svlogParserListener.prototype.exitList_of_ports = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_port_declarations.
svlogParserListener.prototype.enterList_of_port_declarations = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_port_declarations.
svlogParserListener.prototype.exitList_of_port_declarations = function(ctx) {
};


// Enter a parse tree produced by svlogParser#port_declaration.
svlogParserListener.prototype.enterPort_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#port_declaration.
svlogParserListener.prototype.exitPort_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#port.
svlogParserListener.prototype.enterPort = function(ctx) {
};

// Exit a parse tree produced by svlogParser#port.
svlogParserListener.prototype.exitPort = function(ctx) {
};


// Enter a parse tree produced by svlogParser#port_expression.
svlogParserListener.prototype.enterPort_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#port_expression.
svlogParserListener.prototype.exitPort_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#port_reference.
svlogParserListener.prototype.enterPort_reference = function(ctx) {
};

// Exit a parse tree produced by svlogParser#port_reference.
svlogParserListener.prototype.exitPort_reference = function(ctx) {
};


// Enter a parse tree produced by svlogParser#port_direction.
svlogParserListener.prototype.enterPort_direction = function(ctx) {
};

// Exit a parse tree produced by svlogParser#port_direction.
svlogParserListener.prototype.exitPort_direction = function(ctx) {
};


// Enter a parse tree produced by svlogParser#net_port_header.
svlogParserListener.prototype.enterNet_port_header = function(ctx) {
};

// Exit a parse tree produced by svlogParser#net_port_header.
svlogParserListener.prototype.exitNet_port_header = function(ctx) {
};


// Enter a parse tree produced by svlogParser#variable_port_header.
svlogParserListener.prototype.enterVariable_port_header = function(ctx) {
};

// Exit a parse tree produced by svlogParser#variable_port_header.
svlogParserListener.prototype.exitVariable_port_header = function(ctx) {
};


// Enter a parse tree produced by svlogParser#interface_port_header.
svlogParserListener.prototype.enterInterface_port_header = function(ctx) {
};

// Exit a parse tree produced by svlogParser#interface_port_header.
svlogParserListener.prototype.exitInterface_port_header = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ansi_port_declaration.
svlogParserListener.prototype.enterAnsi_port_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ansi_port_declaration.
svlogParserListener.prototype.exitAnsi_port_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#elaboration_system_task.
svlogParserListener.prototype.enterElaboration_system_task = function(ctx) {
};

// Exit a parse tree produced by svlogParser#elaboration_system_task.
svlogParserListener.prototype.exitElaboration_system_task = function(ctx) {
};


// Enter a parse tree produced by svlogParser#finish_number.
svlogParserListener.prototype.enterFinish_number = function(ctx) {
};

// Exit a parse tree produced by svlogParser#finish_number.
svlogParserListener.prototype.exitFinish_number = function(ctx) {
};


// Enter a parse tree produced by svlogParser#module_common_item.
svlogParserListener.prototype.enterModule_common_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#module_common_item.
svlogParserListener.prototype.exitModule_common_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#module_item.
svlogParserListener.prototype.enterModule_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#module_item.
svlogParserListener.prototype.exitModule_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#module_or_generate_item.
svlogParserListener.prototype.enterModule_or_generate_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#module_or_generate_item.
svlogParserListener.prototype.exitModule_or_generate_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#module_or_generate_item_declaration.
svlogParserListener.prototype.enterModule_or_generate_item_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#module_or_generate_item_declaration.
svlogParserListener.prototype.exitModule_or_generate_item_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#non_port_module_item.
svlogParserListener.prototype.enterNon_port_module_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#non_port_module_item.
svlogParserListener.prototype.exitNon_port_module_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#parameter_override.
svlogParserListener.prototype.enterParameter_override = function(ctx) {
};

// Exit a parse tree produced by svlogParser#parameter_override.
svlogParserListener.prototype.exitParameter_override = function(ctx) {
};


// Enter a parse tree produced by svlogParser#bind_directive.
svlogParserListener.prototype.enterBind_directive = function(ctx) {
};

// Exit a parse tree produced by svlogParser#bind_directive.
svlogParserListener.prototype.exitBind_directive = function(ctx) {
};


// Enter a parse tree produced by svlogParser#bind_target_scope.
svlogParserListener.prototype.enterBind_target_scope = function(ctx) {
};

// Exit a parse tree produced by svlogParser#bind_target_scope.
svlogParserListener.prototype.exitBind_target_scope = function(ctx) {
};


// Enter a parse tree produced by svlogParser#bind_target_instance.
svlogParserListener.prototype.enterBind_target_instance = function(ctx) {
};

// Exit a parse tree produced by svlogParser#bind_target_instance.
svlogParserListener.prototype.exitBind_target_instance = function(ctx) {
};


// Enter a parse tree produced by svlogParser#bind_target_instance_list.
svlogParserListener.prototype.enterBind_target_instance_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#bind_target_instance_list.
svlogParserListener.prototype.exitBind_target_instance_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#bind_instantiation.
svlogParserListener.prototype.enterBind_instantiation = function(ctx) {
};

// Exit a parse tree produced by svlogParser#bind_instantiation.
svlogParserListener.prototype.exitBind_instantiation = function(ctx) {
};


// Enter a parse tree produced by svlogParser#config_declaration.
svlogParserListener.prototype.enterConfig_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#config_declaration.
svlogParserListener.prototype.exitConfig_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#design_statement.
svlogParserListener.prototype.enterDesign_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#design_statement.
svlogParserListener.prototype.exitDesign_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#config_rule_statement.
svlogParserListener.prototype.enterConfig_rule_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#config_rule_statement.
svlogParserListener.prototype.exitConfig_rule_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#default_clause.
svlogParserListener.prototype.enterDefault_clause = function(ctx) {
};

// Exit a parse tree produced by svlogParser#default_clause.
svlogParserListener.prototype.exitDefault_clause = function(ctx) {
};


// Enter a parse tree produced by svlogParser#inst_clause.
svlogParserListener.prototype.enterInst_clause = function(ctx) {
};

// Exit a parse tree produced by svlogParser#inst_clause.
svlogParserListener.prototype.exitInst_clause = function(ctx) {
};


// Enter a parse tree produced by svlogParser#inst_name.
svlogParserListener.prototype.enterInst_name = function(ctx) {
};

// Exit a parse tree produced by svlogParser#inst_name.
svlogParserListener.prototype.exitInst_name = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cell_clause.
svlogParserListener.prototype.enterCell_clause = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cell_clause.
svlogParserListener.prototype.exitCell_clause = function(ctx) {
};


// Enter a parse tree produced by svlogParser#liblist_clause.
svlogParserListener.prototype.enterLiblist_clause = function(ctx) {
};

// Exit a parse tree produced by svlogParser#liblist_clause.
svlogParserListener.prototype.exitLiblist_clause = function(ctx) {
};


// Enter a parse tree produced by svlogParser#use_clause.
svlogParserListener.prototype.enterUse_clause = function(ctx) {
};

// Exit a parse tree produced by svlogParser#use_clause.
svlogParserListener.prototype.exitUse_clause = function(ctx) {
};


// Enter a parse tree produced by svlogParser#interface_or_generate_item.
svlogParserListener.prototype.enterInterface_or_generate_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#interface_or_generate_item.
svlogParserListener.prototype.exitInterface_or_generate_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#extern_tf_declaration.
svlogParserListener.prototype.enterExtern_tf_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#extern_tf_declaration.
svlogParserListener.prototype.exitExtern_tf_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#interface_item.
svlogParserListener.prototype.enterInterface_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#interface_item.
svlogParserListener.prototype.exitInterface_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#non_port_interface_item.
svlogParserListener.prototype.enterNon_port_interface_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#non_port_interface_item.
svlogParserListener.prototype.exitNon_port_interface_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#program_item.
svlogParserListener.prototype.enterProgram_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#program_item.
svlogParserListener.prototype.exitProgram_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#non_port_program_item.
svlogParserListener.prototype.enterNon_port_program_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#non_port_program_item.
svlogParserListener.prototype.exitNon_port_program_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#program_generate_item.
svlogParserListener.prototype.enterProgram_generate_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#program_generate_item.
svlogParserListener.prototype.exitProgram_generate_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#checker_port_list.
svlogParserListener.prototype.enterChecker_port_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#checker_port_list.
svlogParserListener.prototype.exitChecker_port_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#checker_port_item.
svlogParserListener.prototype.enterChecker_port_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#checker_port_item.
svlogParserListener.prototype.exitChecker_port_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#checker_port_direction.
svlogParserListener.prototype.enterChecker_port_direction = function(ctx) {
};

// Exit a parse tree produced by svlogParser#checker_port_direction.
svlogParserListener.prototype.exitChecker_port_direction = function(ctx) {
};


// Enter a parse tree produced by svlogParser#checker_or_generate_item.
svlogParserListener.prototype.enterChecker_or_generate_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#checker_or_generate_item.
svlogParserListener.prototype.exitChecker_or_generate_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#checker_or_generate_item_declaration.
svlogParserListener.prototype.enterChecker_or_generate_item_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#checker_or_generate_item_declaration.
svlogParserListener.prototype.exitChecker_or_generate_item_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#checker_generate_item.
svlogParserListener.prototype.enterChecker_generate_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#checker_generate_item.
svlogParserListener.prototype.exitChecker_generate_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#class_item.
svlogParserListener.prototype.enterClass_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#class_item.
svlogParserListener.prototype.exitClass_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#class_property.
svlogParserListener.prototype.enterClass_property = function(ctx) {
};

// Exit a parse tree produced by svlogParser#class_property.
svlogParserListener.prototype.exitClass_property = function(ctx) {
};


// Enter a parse tree produced by svlogParser#class_method.
svlogParserListener.prototype.enterClass_method = function(ctx) {
};

// Exit a parse tree produced by svlogParser#class_method.
svlogParserListener.prototype.exitClass_method = function(ctx) {
};


// Enter a parse tree produced by svlogParser#class_constructor_prototype.
svlogParserListener.prototype.enterClass_constructor_prototype = function(ctx) {
};

// Exit a parse tree produced by svlogParser#class_constructor_prototype.
svlogParserListener.prototype.exitClass_constructor_prototype = function(ctx) {
};


// Enter a parse tree produced by svlogParser#class_constraint.
svlogParserListener.prototype.enterClass_constraint = function(ctx) {
};

// Exit a parse tree produced by svlogParser#class_constraint.
svlogParserListener.prototype.exitClass_constraint = function(ctx) {
};


// Enter a parse tree produced by svlogParser#class_item_qualifier.
svlogParserListener.prototype.enterClass_item_qualifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#class_item_qualifier.
svlogParserListener.prototype.exitClass_item_qualifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#property_qualifier.
svlogParserListener.prototype.enterProperty_qualifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#property_qualifier.
svlogParserListener.prototype.exitProperty_qualifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#random_qualifier.
svlogParserListener.prototype.enterRandom_qualifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#random_qualifier.
svlogParserListener.prototype.exitRandom_qualifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#method_qualifier.
svlogParserListener.prototype.enterMethod_qualifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#method_qualifier.
svlogParserListener.prototype.exitMethod_qualifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#method_prototype.
svlogParserListener.prototype.enterMethod_prototype = function(ctx) {
};

// Exit a parse tree produced by svlogParser#method_prototype.
svlogParserListener.prototype.exitMethod_prototype = function(ctx) {
};


// Enter a parse tree produced by svlogParser#class_constructor_declaration.
svlogParserListener.prototype.enterClass_constructor_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#class_constructor_declaration.
svlogParserListener.prototype.exitClass_constructor_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constraint_declaration.
svlogParserListener.prototype.enterConstraint_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constraint_declaration.
svlogParserListener.prototype.exitConstraint_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constraint_block.
svlogParserListener.prototype.enterConstraint_block = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constraint_block.
svlogParserListener.prototype.exitConstraint_block = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constraint_block_item.
svlogParserListener.prototype.enterConstraint_block_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constraint_block_item.
svlogParserListener.prototype.exitConstraint_block_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#solve_before_list.
svlogParserListener.prototype.enterSolve_before_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#solve_before_list.
svlogParserListener.prototype.exitSolve_before_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constraint_primary.
svlogParserListener.prototype.enterConstraint_primary = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constraint_primary.
svlogParserListener.prototype.exitConstraint_primary = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constraint_expression.
svlogParserListener.prototype.enterConstraint_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constraint_expression.
svlogParserListener.prototype.exitConstraint_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#uniqueness_constraint.
svlogParserListener.prototype.enterUniqueness_constraint = function(ctx) {
};

// Exit a parse tree produced by svlogParser#uniqueness_constraint.
svlogParserListener.prototype.exitUniqueness_constraint = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constraint_set.
svlogParserListener.prototype.enterConstraint_set = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constraint_set.
svlogParserListener.prototype.exitConstraint_set = function(ctx) {
};


// Enter a parse tree produced by svlogParser#dist_list.
svlogParserListener.prototype.enterDist_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#dist_list.
svlogParserListener.prototype.exitDist_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#dist_item.
svlogParserListener.prototype.enterDist_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#dist_item.
svlogParserListener.prototype.exitDist_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#dist_weight.
svlogParserListener.prototype.enterDist_weight = function(ctx) {
};

// Exit a parse tree produced by svlogParser#dist_weight.
svlogParserListener.prototype.exitDist_weight = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constraint_prototype.
svlogParserListener.prototype.enterConstraint_prototype = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constraint_prototype.
svlogParserListener.prototype.exitConstraint_prototype = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constraint_prototype_qualifier.
svlogParserListener.prototype.enterConstraint_prototype_qualifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constraint_prototype_qualifier.
svlogParserListener.prototype.exitConstraint_prototype_qualifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#extern_constraint_declaration.
svlogParserListener.prototype.enterExtern_constraint_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#extern_constraint_declaration.
svlogParserListener.prototype.exitExtern_constraint_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#identifier_list.
svlogParserListener.prototype.enterIdentifier_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#identifier_list.
svlogParserListener.prototype.exitIdentifier_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#package_item.
svlogParserListener.prototype.enterPackage_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#package_item.
svlogParserListener.prototype.exitPackage_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#package_or_generate_item_declaration.
svlogParserListener.prototype.enterPackage_or_generate_item_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#package_or_generate_item_declaration.
svlogParserListener.prototype.exitPackage_or_generate_item_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#anonymous_program.
svlogParserListener.prototype.enterAnonymous_program = function(ctx) {
};

// Exit a parse tree produced by svlogParser#anonymous_program.
svlogParserListener.prototype.exitAnonymous_program = function(ctx) {
};


// Enter a parse tree produced by svlogParser#anonymous_program_item.
svlogParserListener.prototype.enterAnonymous_program_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#anonymous_program_item.
svlogParserListener.prototype.exitAnonymous_program_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#local_parameter_declaration.
svlogParserListener.prototype.enterLocal_parameter_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#local_parameter_declaration.
svlogParserListener.prototype.exitLocal_parameter_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#parameter_declaration.
svlogParserListener.prototype.enterParameter_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#parameter_declaration.
svlogParserListener.prototype.exitParameter_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#specparam_declaration.
svlogParserListener.prototype.enterSpecparam_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#specparam_declaration.
svlogParserListener.prototype.exitSpecparam_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#inout_declaration.
svlogParserListener.prototype.enterInout_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#inout_declaration.
svlogParserListener.prototype.exitInout_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#input_declaration.
svlogParserListener.prototype.enterInput_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#input_declaration.
svlogParserListener.prototype.exitInput_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#output_declaration.
svlogParserListener.prototype.enterOutput_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#output_declaration.
svlogParserListener.prototype.exitOutput_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#interface_port_declaration.
svlogParserListener.prototype.enterInterface_port_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#interface_port_declaration.
svlogParserListener.prototype.exitInterface_port_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ref_declaration.
svlogParserListener.prototype.enterRef_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ref_declaration.
svlogParserListener.prototype.exitRef_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#data_declaration.
svlogParserListener.prototype.enterData_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#data_declaration.
svlogParserListener.prototype.exitData_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#package_import_declaration.
svlogParserListener.prototype.enterPackage_import_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#package_import_declaration.
svlogParserListener.prototype.exitPackage_import_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#package_import_item.
svlogParserListener.prototype.enterPackage_import_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#package_import_item.
svlogParserListener.prototype.exitPackage_import_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#package_export_declaration.
svlogParserListener.prototype.enterPackage_export_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#package_export_declaration.
svlogParserListener.prototype.exitPackage_export_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#genvar_declaration.
svlogParserListener.prototype.enterGenvar_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#genvar_declaration.
svlogParserListener.prototype.exitGenvar_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#net_declaration.
svlogParserListener.prototype.enterNet_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#net_declaration.
svlogParserListener.prototype.exitNet_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#type_declaration.
svlogParserListener.prototype.enterType_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#type_declaration.
svlogParserListener.prototype.exitType_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#net_type_declaration.
svlogParserListener.prototype.enterNet_type_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#net_type_declaration.
svlogParserListener.prototype.exitNet_type_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#lifetime.
svlogParserListener.prototype.enterLifetime = function(ctx) {
};

// Exit a parse tree produced by svlogParser#lifetime.
svlogParserListener.prototype.exitLifetime = function(ctx) {
};


// Enter a parse tree produced by svlogParser#data_type.
svlogParserListener.prototype.enterData_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#data_type.
svlogParserListener.prototype.exitData_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#data_type_or_implicit.
svlogParserListener.prototype.enterData_type_or_implicit = function(ctx) {
};

// Exit a parse tree produced by svlogParser#data_type_or_implicit.
svlogParserListener.prototype.exitData_type_or_implicit = function(ctx) {
};


// Enter a parse tree produced by svlogParser#implicit_data_type.
svlogParserListener.prototype.enterImplicit_data_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#implicit_data_type.
svlogParserListener.prototype.exitImplicit_data_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#enum_base_type.
svlogParserListener.prototype.enterEnum_base_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#enum_base_type.
svlogParserListener.prototype.exitEnum_base_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#enum_name_declaration.
svlogParserListener.prototype.enterEnum_name_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#enum_name_declaration.
svlogParserListener.prototype.exitEnum_name_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#class_scope.
svlogParserListener.prototype.enterClass_scope = function(ctx) {
};

// Exit a parse tree produced by svlogParser#class_scope.
svlogParserListener.prototype.exitClass_scope = function(ctx) {
};


// Enter a parse tree produced by svlogParser#class_type.
svlogParserListener.prototype.enterClass_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#class_type.
svlogParserListener.prototype.exitClass_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#integer_type.
svlogParserListener.prototype.enterInteger_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#integer_type.
svlogParserListener.prototype.exitInteger_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#integer_atom_type.
svlogParserListener.prototype.enterInteger_atom_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#integer_atom_type.
svlogParserListener.prototype.exitInteger_atom_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#integer_vector_type.
svlogParserListener.prototype.enterInteger_vector_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#integer_vector_type.
svlogParserListener.prototype.exitInteger_vector_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#non_integer_type.
svlogParserListener.prototype.enterNon_integer_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#non_integer_type.
svlogParserListener.prototype.exitNon_integer_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#net_type.
svlogParserListener.prototype.enterNet_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#net_type.
svlogParserListener.prototype.exitNet_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#net_port_type.
svlogParserListener.prototype.enterNet_port_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#net_port_type.
svlogParserListener.prototype.exitNet_port_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#variable_port_type.
svlogParserListener.prototype.enterVariable_port_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#variable_port_type.
svlogParserListener.prototype.exitVariable_port_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#var_data_type.
svlogParserListener.prototype.enterVar_data_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#var_data_type.
svlogParserListener.prototype.exitVar_data_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#signing.
svlogParserListener.prototype.enterSigning = function(ctx) {
};

// Exit a parse tree produced by svlogParser#signing.
svlogParserListener.prototype.exitSigning = function(ctx) {
};


// Enter a parse tree produced by svlogParser#simple_type.
svlogParserListener.prototype.enterSimple_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#simple_type.
svlogParserListener.prototype.exitSimple_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#struct_union_member.
svlogParserListener.prototype.enterStruct_union_member = function(ctx) {
};

// Exit a parse tree produced by svlogParser#struct_union_member.
svlogParserListener.prototype.exitStruct_union_member = function(ctx) {
};


// Enter a parse tree produced by svlogParser#data_type_or_void.
svlogParserListener.prototype.enterData_type_or_void = function(ctx) {
};

// Exit a parse tree produced by svlogParser#data_type_or_void.
svlogParserListener.prototype.exitData_type_or_void = function(ctx) {
};


// Enter a parse tree produced by svlogParser#struct_union.
svlogParserListener.prototype.enterStruct_union = function(ctx) {
};

// Exit a parse tree produced by svlogParser#struct_union.
svlogParserListener.prototype.exitStruct_union = function(ctx) {
};


// Enter a parse tree produced by svlogParser#type_reference.
svlogParserListener.prototype.enterType_reference = function(ctx) {
};

// Exit a parse tree produced by svlogParser#type_reference.
svlogParserListener.prototype.exitType_reference = function(ctx) {
};


// Enter a parse tree produced by svlogParser#drive_strength.
svlogParserListener.prototype.enterDrive_strength = function(ctx) {
};

// Exit a parse tree produced by svlogParser#drive_strength.
svlogParserListener.prototype.exitDrive_strength = function(ctx) {
};


// Enter a parse tree produced by svlogParser#strength0.
svlogParserListener.prototype.enterStrength0 = function(ctx) {
};

// Exit a parse tree produced by svlogParser#strength0.
svlogParserListener.prototype.exitStrength0 = function(ctx) {
};


// Enter a parse tree produced by svlogParser#strength1.
svlogParserListener.prototype.enterStrength1 = function(ctx) {
};

// Exit a parse tree produced by svlogParser#strength1.
svlogParserListener.prototype.exitStrength1 = function(ctx) {
};


// Enter a parse tree produced by svlogParser#charge_strength.
svlogParserListener.prototype.enterCharge_strength = function(ctx) {
};

// Exit a parse tree produced by svlogParser#charge_strength.
svlogParserListener.prototype.exitCharge_strength = function(ctx) {
};


// Enter a parse tree produced by svlogParser#delay3.
svlogParserListener.prototype.enterDelay3 = function(ctx) {
};

// Exit a parse tree produced by svlogParser#delay3.
svlogParserListener.prototype.exitDelay3 = function(ctx) {
};


// Enter a parse tree produced by svlogParser#delay2.
svlogParserListener.prototype.enterDelay2 = function(ctx) {
};

// Exit a parse tree produced by svlogParser#delay2.
svlogParserListener.prototype.exitDelay2 = function(ctx) {
};


// Enter a parse tree produced by svlogParser#delay_value.
svlogParserListener.prototype.enterDelay_value = function(ctx) {
};

// Exit a parse tree produced by svlogParser#delay_value.
svlogParserListener.prototype.exitDelay_value = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_defparam_assignments.
svlogParserListener.prototype.enterList_of_defparam_assignments = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_defparam_assignments.
svlogParserListener.prototype.exitList_of_defparam_assignments = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_genvar_identifiers.
svlogParserListener.prototype.enterList_of_genvar_identifiers = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_genvar_identifiers.
svlogParserListener.prototype.exitList_of_genvar_identifiers = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_interface_identifiers.
svlogParserListener.prototype.enterList_of_interface_identifiers = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_interface_identifiers.
svlogParserListener.prototype.exitList_of_interface_identifiers = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_net_decl_assignments.
svlogParserListener.prototype.enterList_of_net_decl_assignments = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_net_decl_assignments.
svlogParserListener.prototype.exitList_of_net_decl_assignments = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_param_assignments.
svlogParserListener.prototype.enterList_of_param_assignments = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_param_assignments.
svlogParserListener.prototype.exitList_of_param_assignments = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_port_identifiers.
svlogParserListener.prototype.enterList_of_port_identifiers = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_port_identifiers.
svlogParserListener.prototype.exitList_of_port_identifiers = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_udp_port_identifiers.
svlogParserListener.prototype.enterList_of_udp_port_identifiers = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_udp_port_identifiers.
svlogParserListener.prototype.exitList_of_udp_port_identifiers = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_specparam_assignments.
svlogParserListener.prototype.enterList_of_specparam_assignments = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_specparam_assignments.
svlogParserListener.prototype.exitList_of_specparam_assignments = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_tf_variable_identifiers.
svlogParserListener.prototype.enterList_of_tf_variable_identifiers = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_tf_variable_identifiers.
svlogParserListener.prototype.exitList_of_tf_variable_identifiers = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_type_assignments.
svlogParserListener.prototype.enterList_of_type_assignments = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_type_assignments.
svlogParserListener.prototype.exitList_of_type_assignments = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_variable_decl_assignments.
svlogParserListener.prototype.enterList_of_variable_decl_assignments = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_variable_decl_assignments.
svlogParserListener.prototype.exitList_of_variable_decl_assignments = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_variable_identifiers.
svlogParserListener.prototype.enterList_of_variable_identifiers = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_variable_identifiers.
svlogParserListener.prototype.exitList_of_variable_identifiers = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_variable_port_identifiers.
svlogParserListener.prototype.enterList_of_variable_port_identifiers = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_variable_port_identifiers.
svlogParserListener.prototype.exitList_of_variable_port_identifiers = function(ctx) {
};


// Enter a parse tree produced by svlogParser#defparam_assignment.
svlogParserListener.prototype.enterDefparam_assignment = function(ctx) {
};

// Exit a parse tree produced by svlogParser#defparam_assignment.
svlogParserListener.prototype.exitDefparam_assignment = function(ctx) {
};


// Enter a parse tree produced by svlogParser#net_decl_assignment.
svlogParserListener.prototype.enterNet_decl_assignment = function(ctx) {
};

// Exit a parse tree produced by svlogParser#net_decl_assignment.
svlogParserListener.prototype.exitNet_decl_assignment = function(ctx) {
};


// Enter a parse tree produced by svlogParser#param_assignment.
svlogParserListener.prototype.enterParam_assignment = function(ctx) {
};

// Exit a parse tree produced by svlogParser#param_assignment.
svlogParserListener.prototype.exitParam_assignment = function(ctx) {
};


// Enter a parse tree produced by svlogParser#specparam_assignment.
svlogParserListener.prototype.enterSpecparam_assignment = function(ctx) {
};

// Exit a parse tree produced by svlogParser#specparam_assignment.
svlogParserListener.prototype.exitSpecparam_assignment = function(ctx) {
};


// Enter a parse tree produced by svlogParser#type_assignment.
svlogParserListener.prototype.enterType_assignment = function(ctx) {
};

// Exit a parse tree produced by svlogParser#type_assignment.
svlogParserListener.prototype.exitType_assignment = function(ctx) {
};


// Enter a parse tree produced by svlogParser#pulse_control_specparam.
svlogParserListener.prototype.enterPulse_control_specparam = function(ctx) {
};

// Exit a parse tree produced by svlogParser#pulse_control_specparam.
svlogParserListener.prototype.exitPulse_control_specparam = function(ctx) {
};


// Enter a parse tree produced by svlogParser#error_limit_value.
svlogParserListener.prototype.enterError_limit_value = function(ctx) {
};

// Exit a parse tree produced by svlogParser#error_limit_value.
svlogParserListener.prototype.exitError_limit_value = function(ctx) {
};


// Enter a parse tree produced by svlogParser#reject_limit_value.
svlogParserListener.prototype.enterReject_limit_value = function(ctx) {
};

// Exit a parse tree produced by svlogParser#reject_limit_value.
svlogParserListener.prototype.exitReject_limit_value = function(ctx) {
};


// Enter a parse tree produced by svlogParser#limit_value.
svlogParserListener.prototype.enterLimit_value = function(ctx) {
};

// Exit a parse tree produced by svlogParser#limit_value.
svlogParserListener.prototype.exitLimit_value = function(ctx) {
};


// Enter a parse tree produced by svlogParser#variable_decl_assignment.
svlogParserListener.prototype.enterVariable_decl_assignment = function(ctx) {
};

// Exit a parse tree produced by svlogParser#variable_decl_assignment.
svlogParserListener.prototype.exitVariable_decl_assignment = function(ctx) {
};


// Enter a parse tree produced by svlogParser#class_new.
svlogParserListener.prototype.enterClass_new = function(ctx) {
};

// Exit a parse tree produced by svlogParser#class_new.
svlogParserListener.prototype.exitClass_new = function(ctx) {
};


// Enter a parse tree produced by svlogParser#dynamic_array_new.
svlogParserListener.prototype.enterDynamic_array_new = function(ctx) {
};

// Exit a parse tree produced by svlogParser#dynamic_array_new.
svlogParserListener.prototype.exitDynamic_array_new = function(ctx) {
};


// Enter a parse tree produced by svlogParser#unpacked_dimension.
svlogParserListener.prototype.enterUnpacked_dimension = function(ctx) {
};

// Exit a parse tree produced by svlogParser#unpacked_dimension.
svlogParserListener.prototype.exitUnpacked_dimension = function(ctx) {
};


// Enter a parse tree produced by svlogParser#packed_dimension.
svlogParserListener.prototype.enterPacked_dimension = function(ctx) {
};

// Exit a parse tree produced by svlogParser#packed_dimension.
svlogParserListener.prototype.exitPacked_dimension = function(ctx) {
};


// Enter a parse tree produced by svlogParser#associative_dimension.
svlogParserListener.prototype.enterAssociative_dimension = function(ctx) {
};

// Exit a parse tree produced by svlogParser#associative_dimension.
svlogParserListener.prototype.exitAssociative_dimension = function(ctx) {
};


// Enter a parse tree produced by svlogParser#variable_dimension.
svlogParserListener.prototype.enterVariable_dimension = function(ctx) {
};

// Exit a parse tree produced by svlogParser#variable_dimension.
svlogParserListener.prototype.exitVariable_dimension = function(ctx) {
};


// Enter a parse tree produced by svlogParser#queue_dimension.
svlogParserListener.prototype.enterQueue_dimension = function(ctx) {
};

// Exit a parse tree produced by svlogParser#queue_dimension.
svlogParserListener.prototype.exitQueue_dimension = function(ctx) {
};


// Enter a parse tree produced by svlogParser#unsized_dimension.
svlogParserListener.prototype.enterUnsized_dimension = function(ctx) {
};

// Exit a parse tree produced by svlogParser#unsized_dimension.
svlogParserListener.prototype.exitUnsized_dimension = function(ctx) {
};


// Enter a parse tree produced by svlogParser#function_data_type_or_implicit.
svlogParserListener.prototype.enterFunction_data_type_or_implicit = function(ctx) {
};

// Exit a parse tree produced by svlogParser#function_data_type_or_implicit.
svlogParserListener.prototype.exitFunction_data_type_or_implicit = function(ctx) {
};


// Enter a parse tree produced by svlogParser#function_declaration.
svlogParserListener.prototype.enterFunction_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#function_declaration.
svlogParserListener.prototype.exitFunction_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#function_body_declaration.
svlogParserListener.prototype.enterFunction_body_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#function_body_declaration.
svlogParserListener.prototype.exitFunction_body_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#function_prototype.
svlogParserListener.prototype.enterFunction_prototype = function(ctx) {
};

// Exit a parse tree produced by svlogParser#function_prototype.
svlogParserListener.prototype.exitFunction_prototype = function(ctx) {
};


// Enter a parse tree produced by svlogParser#dpi_import_export.
svlogParserListener.prototype.enterDpi_import_export = function(ctx) {
};

// Exit a parse tree produced by svlogParser#dpi_import_export.
svlogParserListener.prototype.exitDpi_import_export = function(ctx) {
};


// Enter a parse tree produced by svlogParser#dpi_spec_string.
svlogParserListener.prototype.enterDpi_spec_string = function(ctx) {
};

// Exit a parse tree produced by svlogParser#dpi_spec_string.
svlogParserListener.prototype.exitDpi_spec_string = function(ctx) {
};


// Enter a parse tree produced by svlogParser#dpi_function_import_property.
svlogParserListener.prototype.enterDpi_function_import_property = function(ctx) {
};

// Exit a parse tree produced by svlogParser#dpi_function_import_property.
svlogParserListener.prototype.exitDpi_function_import_property = function(ctx) {
};


// Enter a parse tree produced by svlogParser#dpi_task_import_property.
svlogParserListener.prototype.enterDpi_task_import_property = function(ctx) {
};

// Exit a parse tree produced by svlogParser#dpi_task_import_property.
svlogParserListener.prototype.exitDpi_task_import_property = function(ctx) {
};


// Enter a parse tree produced by svlogParser#dpi_function_proto.
svlogParserListener.prototype.enterDpi_function_proto = function(ctx) {
};

// Exit a parse tree produced by svlogParser#dpi_function_proto.
svlogParserListener.prototype.exitDpi_function_proto = function(ctx) {
};


// Enter a parse tree produced by svlogParser#dpi_task_proto.
svlogParserListener.prototype.enterDpi_task_proto = function(ctx) {
};

// Exit a parse tree produced by svlogParser#dpi_task_proto.
svlogParserListener.prototype.exitDpi_task_proto = function(ctx) {
};


// Enter a parse tree produced by svlogParser#task_declaration.
svlogParserListener.prototype.enterTask_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#task_declaration.
svlogParserListener.prototype.exitTask_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#task_body_declaration.
svlogParserListener.prototype.enterTask_body_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#task_body_declaration.
svlogParserListener.prototype.exitTask_body_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#tf_item_declaration.
svlogParserListener.prototype.enterTf_item_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#tf_item_declaration.
svlogParserListener.prototype.exitTf_item_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#tf_port_list.
svlogParserListener.prototype.enterTf_port_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#tf_port_list.
svlogParserListener.prototype.exitTf_port_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#tf_port_item.
svlogParserListener.prototype.enterTf_port_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#tf_port_item.
svlogParserListener.prototype.exitTf_port_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#tf_port_direction.
svlogParserListener.prototype.enterTf_port_direction = function(ctx) {
};

// Exit a parse tree produced by svlogParser#tf_port_direction.
svlogParserListener.prototype.exitTf_port_direction = function(ctx) {
};


// Enter a parse tree produced by svlogParser#tf_port_declaration.
svlogParserListener.prototype.enterTf_port_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#tf_port_declaration.
svlogParserListener.prototype.exitTf_port_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#task_prototype.
svlogParserListener.prototype.enterTask_prototype = function(ctx) {
};

// Exit a parse tree produced by svlogParser#task_prototype.
svlogParserListener.prototype.exitTask_prototype = function(ctx) {
};


// Enter a parse tree produced by svlogParser#block_item_declaration.
svlogParserListener.prototype.enterBlock_item_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#block_item_declaration.
svlogParserListener.prototype.exitBlock_item_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#modport_declaration.
svlogParserListener.prototype.enterModport_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#modport_declaration.
svlogParserListener.prototype.exitModport_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#modport_item.
svlogParserListener.prototype.enterModport_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#modport_item.
svlogParserListener.prototype.exitModport_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#modport_ports_declaration.
svlogParserListener.prototype.enterModport_ports_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#modport_ports_declaration.
svlogParserListener.prototype.exitModport_ports_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#modport_clocking_declaration.
svlogParserListener.prototype.enterModport_clocking_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#modport_clocking_declaration.
svlogParserListener.prototype.exitModport_clocking_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#modport_simple_ports_declaration.
svlogParserListener.prototype.enterModport_simple_ports_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#modport_simple_ports_declaration.
svlogParserListener.prototype.exitModport_simple_ports_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#modport_simple_port.
svlogParserListener.prototype.enterModport_simple_port = function(ctx) {
};

// Exit a parse tree produced by svlogParser#modport_simple_port.
svlogParserListener.prototype.exitModport_simple_port = function(ctx) {
};


// Enter a parse tree produced by svlogParser#modport_tf_ports_declaration.
svlogParserListener.prototype.enterModport_tf_ports_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#modport_tf_ports_declaration.
svlogParserListener.prototype.exitModport_tf_ports_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#modport_tf_port.
svlogParserListener.prototype.enterModport_tf_port = function(ctx) {
};

// Exit a parse tree produced by svlogParser#modport_tf_port.
svlogParserListener.prototype.exitModport_tf_port = function(ctx) {
};


// Enter a parse tree produced by svlogParser#import_export.
svlogParserListener.prototype.enterImport_export = function(ctx) {
};

// Exit a parse tree produced by svlogParser#import_export.
svlogParserListener.prototype.exitImport_export = function(ctx) {
};


// Enter a parse tree produced by svlogParser#concurrent_assertion_item.
svlogParserListener.prototype.enterConcurrent_assertion_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#concurrent_assertion_item.
svlogParserListener.prototype.exitConcurrent_assertion_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#concurrent_assertion_statement.
svlogParserListener.prototype.enterConcurrent_assertion_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#concurrent_assertion_statement.
svlogParserListener.prototype.exitConcurrent_assertion_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#assert_property_statement.
svlogParserListener.prototype.enterAssert_property_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#assert_property_statement.
svlogParserListener.prototype.exitAssert_property_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#assume_property_statement.
svlogParserListener.prototype.enterAssume_property_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#assume_property_statement.
svlogParserListener.prototype.exitAssume_property_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cover_property_statement.
svlogParserListener.prototype.enterCover_property_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cover_property_statement.
svlogParserListener.prototype.exitCover_property_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#expect_property_statement.
svlogParserListener.prototype.enterExpect_property_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#expect_property_statement.
svlogParserListener.prototype.exitExpect_property_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cover_sequence_statement.
svlogParserListener.prototype.enterCover_sequence_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cover_sequence_statement.
svlogParserListener.prototype.exitCover_sequence_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#restrict_property_statement.
svlogParserListener.prototype.enterRestrict_property_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#restrict_property_statement.
svlogParserListener.prototype.exitRestrict_property_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#property_instance.
svlogParserListener.prototype.enterProperty_instance = function(ctx) {
};

// Exit a parse tree produced by svlogParser#property_instance.
svlogParserListener.prototype.exitProperty_instance = function(ctx) {
};


// Enter a parse tree produced by svlogParser#property_list_of_arguments.
svlogParserListener.prototype.enterProperty_list_of_arguments = function(ctx) {
};

// Exit a parse tree produced by svlogParser#property_list_of_arguments.
svlogParserListener.prototype.exitProperty_list_of_arguments = function(ctx) {
};


// Enter a parse tree produced by svlogParser#property_actual_arg.
svlogParserListener.prototype.enterProperty_actual_arg = function(ctx) {
};

// Exit a parse tree produced by svlogParser#property_actual_arg.
svlogParserListener.prototype.exitProperty_actual_arg = function(ctx) {
};


// Enter a parse tree produced by svlogParser#assertion_item_declaration.
svlogParserListener.prototype.enterAssertion_item_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#assertion_item_declaration.
svlogParserListener.prototype.exitAssertion_item_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#property_declaration.
svlogParserListener.prototype.enterProperty_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#property_declaration.
svlogParserListener.prototype.exitProperty_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#property_port_list.
svlogParserListener.prototype.enterProperty_port_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#property_port_list.
svlogParserListener.prototype.exitProperty_port_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#property_port_item.
svlogParserListener.prototype.enterProperty_port_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#property_port_item.
svlogParserListener.prototype.exitProperty_port_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#property_lvar_port_direction.
svlogParserListener.prototype.enterProperty_lvar_port_direction = function(ctx) {
};

// Exit a parse tree produced by svlogParser#property_lvar_port_direction.
svlogParserListener.prototype.exitProperty_lvar_port_direction = function(ctx) {
};


// Enter a parse tree produced by svlogParser#property_formal_type.
svlogParserListener.prototype.enterProperty_formal_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#property_formal_type.
svlogParserListener.prototype.exitProperty_formal_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#property_spec.
svlogParserListener.prototype.enterProperty_spec = function(ctx) {
};

// Exit a parse tree produced by svlogParser#property_spec.
svlogParserListener.prototype.exitProperty_spec = function(ctx) {
};


// Enter a parse tree produced by svlogParser#property_expr.
svlogParserListener.prototype.enterProperty_expr = function(ctx) {
};

// Exit a parse tree produced by svlogParser#property_expr.
svlogParserListener.prototype.exitProperty_expr = function(ctx) {
};


// Enter a parse tree produced by svlogParser#property_case_item.
svlogParserListener.prototype.enterProperty_case_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#property_case_item.
svlogParserListener.prototype.exitProperty_case_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#sequence_declaration.
svlogParserListener.prototype.enterSequence_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#sequence_declaration.
svlogParserListener.prototype.exitSequence_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#sequence_port_list.
svlogParserListener.prototype.enterSequence_port_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#sequence_port_list.
svlogParserListener.prototype.exitSequence_port_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#sequence_port_item.
svlogParserListener.prototype.enterSequence_port_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#sequence_port_item.
svlogParserListener.prototype.exitSequence_port_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#sequence_lvar_port_direction.
svlogParserListener.prototype.enterSequence_lvar_port_direction = function(ctx) {
};

// Exit a parse tree produced by svlogParser#sequence_lvar_port_direction.
svlogParserListener.prototype.exitSequence_lvar_port_direction = function(ctx) {
};


// Enter a parse tree produced by svlogParser#sequence_formal_type.
svlogParserListener.prototype.enterSequence_formal_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#sequence_formal_type.
svlogParserListener.prototype.exitSequence_formal_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#sequence_expr.
svlogParserListener.prototype.enterSequence_expr = function(ctx) {
};

// Exit a parse tree produced by svlogParser#sequence_expr.
svlogParserListener.prototype.exitSequence_expr = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cycle_delay_range.
svlogParserListener.prototype.enterCycle_delay_range = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cycle_delay_range.
svlogParserListener.prototype.exitCycle_delay_range = function(ctx) {
};


// Enter a parse tree produced by svlogParser#sequence_method_call.
svlogParserListener.prototype.enterSequence_method_call = function(ctx) {
};

// Exit a parse tree produced by svlogParser#sequence_method_call.
svlogParserListener.prototype.exitSequence_method_call = function(ctx) {
};


// Enter a parse tree produced by svlogParser#sequence_match_item.
svlogParserListener.prototype.enterSequence_match_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#sequence_match_item.
svlogParserListener.prototype.exitSequence_match_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#sequence_instance.
svlogParserListener.prototype.enterSequence_instance = function(ctx) {
};

// Exit a parse tree produced by svlogParser#sequence_instance.
svlogParserListener.prototype.exitSequence_instance = function(ctx) {
};


// Enter a parse tree produced by svlogParser#sequence_list_of_arguments.
svlogParserListener.prototype.enterSequence_list_of_arguments = function(ctx) {
};

// Exit a parse tree produced by svlogParser#sequence_list_of_arguments.
svlogParserListener.prototype.exitSequence_list_of_arguments = function(ctx) {
};


// Enter a parse tree produced by svlogParser#sequence_actual_arg.
svlogParserListener.prototype.enterSequence_actual_arg = function(ctx) {
};

// Exit a parse tree produced by svlogParser#sequence_actual_arg.
svlogParserListener.prototype.exitSequence_actual_arg = function(ctx) {
};


// Enter a parse tree produced by svlogParser#boolean_abbrev.
svlogParserListener.prototype.enterBoolean_abbrev = function(ctx) {
};

// Exit a parse tree produced by svlogParser#boolean_abbrev.
svlogParserListener.prototype.exitBoolean_abbrev = function(ctx) {
};


// Enter a parse tree produced by svlogParser#sequence_abbrev.
svlogParserListener.prototype.enterSequence_abbrev = function(ctx) {
};

// Exit a parse tree produced by svlogParser#sequence_abbrev.
svlogParserListener.prototype.exitSequence_abbrev = function(ctx) {
};


// Enter a parse tree produced by svlogParser#consecutive_repetition.
svlogParserListener.prototype.enterConsecutive_repetition = function(ctx) {
};

// Exit a parse tree produced by svlogParser#consecutive_repetition.
svlogParserListener.prototype.exitConsecutive_repetition = function(ctx) {
};


// Enter a parse tree produced by svlogParser#non_consecutive_repetition.
svlogParserListener.prototype.enterNon_consecutive_repetition = function(ctx) {
};

// Exit a parse tree produced by svlogParser#non_consecutive_repetition.
svlogParserListener.prototype.exitNon_consecutive_repetition = function(ctx) {
};


// Enter a parse tree produced by svlogParser#goto_repetition.
svlogParserListener.prototype.enterGoto_repetition = function(ctx) {
};

// Exit a parse tree produced by svlogParser#goto_repetition.
svlogParserListener.prototype.exitGoto_repetition = function(ctx) {
};


// Enter a parse tree produced by svlogParser#const_or_range_expression.
svlogParserListener.prototype.enterConst_or_range_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#const_or_range_expression.
svlogParserListener.prototype.exitConst_or_range_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cycle_delay_const_range_expression.
svlogParserListener.prototype.enterCycle_delay_const_range_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cycle_delay_const_range_expression.
svlogParserListener.prototype.exitCycle_delay_const_range_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#expression_or_dist.
svlogParserListener.prototype.enterExpression_or_dist = function(ctx) {
};

// Exit a parse tree produced by svlogParser#expression_or_dist.
svlogParserListener.prototype.exitExpression_or_dist = function(ctx) {
};


// Enter a parse tree produced by svlogParser#assertion_variable_declaration.
svlogParserListener.prototype.enterAssertion_variable_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#assertion_variable_declaration.
svlogParserListener.prototype.exitAssertion_variable_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#covergroup_declaration.
svlogParserListener.prototype.enterCovergroup_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#covergroup_declaration.
svlogParserListener.prototype.exitCovergroup_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#coverage_spec_or_option.
svlogParserListener.prototype.enterCoverage_spec_or_option = function(ctx) {
};

// Exit a parse tree produced by svlogParser#coverage_spec_or_option.
svlogParserListener.prototype.exitCoverage_spec_or_option = function(ctx) {
};


// Enter a parse tree produced by svlogParser#coverage_option.
svlogParserListener.prototype.enterCoverage_option = function(ctx) {
};

// Exit a parse tree produced by svlogParser#coverage_option.
svlogParserListener.prototype.exitCoverage_option = function(ctx) {
};


// Enter a parse tree produced by svlogParser#coverage_spec.
svlogParserListener.prototype.enterCoverage_spec = function(ctx) {
};

// Exit a parse tree produced by svlogParser#coverage_spec.
svlogParserListener.prototype.exitCoverage_spec = function(ctx) {
};


// Enter a parse tree produced by svlogParser#coverage_event.
svlogParserListener.prototype.enterCoverage_event = function(ctx) {
};

// Exit a parse tree produced by svlogParser#coverage_event.
svlogParserListener.prototype.exitCoverage_event = function(ctx) {
};


// Enter a parse tree produced by svlogParser#block_event_expression.
svlogParserListener.prototype.enterBlock_event_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#block_event_expression.
svlogParserListener.prototype.exitBlock_event_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#hierarchical_btf_identifier.
svlogParserListener.prototype.enterHierarchical_btf_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#hierarchical_btf_identifier.
svlogParserListener.prototype.exitHierarchical_btf_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cover_point.
svlogParserListener.prototype.enterCover_point = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cover_point.
svlogParserListener.prototype.exitCover_point = function(ctx) {
};


// Enter a parse tree produced by svlogParser#bins_or_empty.
svlogParserListener.prototype.enterBins_or_empty = function(ctx) {
};

// Exit a parse tree produced by svlogParser#bins_or_empty.
svlogParserListener.prototype.exitBins_or_empty = function(ctx) {
};


// Enter a parse tree produced by svlogParser#bins_or_options.
svlogParserListener.prototype.enterBins_or_options = function(ctx) {
};

// Exit a parse tree produced by svlogParser#bins_or_options.
svlogParserListener.prototype.exitBins_or_options = function(ctx) {
};


// Enter a parse tree produced by svlogParser#bins_keyword.
svlogParserListener.prototype.enterBins_keyword = function(ctx) {
};

// Exit a parse tree produced by svlogParser#bins_keyword.
svlogParserListener.prototype.exitBins_keyword = function(ctx) {
};


// Enter a parse tree produced by svlogParser#trans_list.
svlogParserListener.prototype.enterTrans_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#trans_list.
svlogParserListener.prototype.exitTrans_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#trans_set.
svlogParserListener.prototype.enterTrans_set = function(ctx) {
};

// Exit a parse tree produced by svlogParser#trans_set.
svlogParserListener.prototype.exitTrans_set = function(ctx) {
};


// Enter a parse tree produced by svlogParser#trans_range_list.
svlogParserListener.prototype.enterTrans_range_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#trans_range_list.
svlogParserListener.prototype.exitTrans_range_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#trans_item.
svlogParserListener.prototype.enterTrans_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#trans_item.
svlogParserListener.prototype.exitTrans_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#repeat_range.
svlogParserListener.prototype.enterRepeat_range = function(ctx) {
};

// Exit a parse tree produced by svlogParser#repeat_range.
svlogParserListener.prototype.exitRepeat_range = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cover_cross.
svlogParserListener.prototype.enterCover_cross = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cover_cross.
svlogParserListener.prototype.exitCover_cross = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_cross_items.
svlogParserListener.prototype.enterList_of_cross_items = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_cross_items.
svlogParserListener.prototype.exitList_of_cross_items = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cross_item.
svlogParserListener.prototype.enterCross_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cross_item.
svlogParserListener.prototype.exitCross_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cross_body.
svlogParserListener.prototype.enterCross_body = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cross_body.
svlogParserListener.prototype.exitCross_body = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cross_body_item.
svlogParserListener.prototype.enterCross_body_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cross_body_item.
svlogParserListener.prototype.exitCross_body_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#bins_selection_or_option.
svlogParserListener.prototype.enterBins_selection_or_option = function(ctx) {
};

// Exit a parse tree produced by svlogParser#bins_selection_or_option.
svlogParserListener.prototype.exitBins_selection_or_option = function(ctx) {
};


// Enter a parse tree produced by svlogParser#bins_selection.
svlogParserListener.prototype.enterBins_selection = function(ctx) {
};

// Exit a parse tree produced by svlogParser#bins_selection.
svlogParserListener.prototype.exitBins_selection = function(ctx) {
};


// Enter a parse tree produced by svlogParser#select_expression.
svlogParserListener.prototype.enterSelect_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#select_expression.
svlogParserListener.prototype.exitSelect_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#select_condition.
svlogParserListener.prototype.enterSelect_condition = function(ctx) {
};

// Exit a parse tree produced by svlogParser#select_condition.
svlogParserListener.prototype.exitSelect_condition = function(ctx) {
};


// Enter a parse tree produced by svlogParser#bins_expression.
svlogParserListener.prototype.enterBins_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#bins_expression.
svlogParserListener.prototype.exitBins_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#covergroup_range_list.
svlogParserListener.prototype.enterCovergroup_range_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#covergroup_range_list.
svlogParserListener.prototype.exitCovergroup_range_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#covergroup_value_range.
svlogParserListener.prototype.enterCovergroup_value_range = function(ctx) {
};

// Exit a parse tree produced by svlogParser#covergroup_value_range.
svlogParserListener.prototype.exitCovergroup_value_range = function(ctx) {
};


// Enter a parse tree produced by svlogParser#with_covergroup_expression.
svlogParserListener.prototype.enterWith_covergroup_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#with_covergroup_expression.
svlogParserListener.prototype.exitWith_covergroup_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#set_covergroup_expression.
svlogParserListener.prototype.enterSet_covergroup_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#set_covergroup_expression.
svlogParserListener.prototype.exitSet_covergroup_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#integer_covergroup_expression.
svlogParserListener.prototype.enterInteger_covergroup_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#integer_covergroup_expression.
svlogParserListener.prototype.exitInteger_covergroup_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cross_set_expression.
svlogParserListener.prototype.enterCross_set_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cross_set_expression.
svlogParserListener.prototype.exitCross_set_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#covergroup_expression.
svlogParserListener.prototype.enterCovergroup_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#covergroup_expression.
svlogParserListener.prototype.exitCovergroup_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#let_declaration.
svlogParserListener.prototype.enterLet_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#let_declaration.
svlogParserListener.prototype.exitLet_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#let_identifier.
svlogParserListener.prototype.enterLet_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#let_identifier.
svlogParserListener.prototype.exitLet_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#let_port_list.
svlogParserListener.prototype.enterLet_port_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#let_port_list.
svlogParserListener.prototype.exitLet_port_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#let_port_item.
svlogParserListener.prototype.enterLet_port_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#let_port_item.
svlogParserListener.prototype.exitLet_port_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#let_formal_type.
svlogParserListener.prototype.enterLet_formal_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#let_formal_type.
svlogParserListener.prototype.exitLet_formal_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#let_expression.
svlogParserListener.prototype.enterLet_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#let_expression.
svlogParserListener.prototype.exitLet_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#let_list_of_arguments.
svlogParserListener.prototype.enterLet_list_of_arguments = function(ctx) {
};

// Exit a parse tree produced by svlogParser#let_list_of_arguments.
svlogParserListener.prototype.exitLet_list_of_arguments = function(ctx) {
};


// Enter a parse tree produced by svlogParser#let_actual_arg.
svlogParserListener.prototype.enterLet_actual_arg = function(ctx) {
};

// Exit a parse tree produced by svlogParser#let_actual_arg.
svlogParserListener.prototype.exitLet_actual_arg = function(ctx) {
};


// Enter a parse tree produced by svlogParser#gate_instantiation.
svlogParserListener.prototype.enterGate_instantiation = function(ctx) {
};

// Exit a parse tree produced by svlogParser#gate_instantiation.
svlogParserListener.prototype.exitGate_instantiation = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cmos_switch_instance.
svlogParserListener.prototype.enterCmos_switch_instance = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cmos_switch_instance.
svlogParserListener.prototype.exitCmos_switch_instance = function(ctx) {
};


// Enter a parse tree produced by svlogParser#enable_gate_instance.
svlogParserListener.prototype.enterEnable_gate_instance = function(ctx) {
};

// Exit a parse tree produced by svlogParser#enable_gate_instance.
svlogParserListener.prototype.exitEnable_gate_instance = function(ctx) {
};


// Enter a parse tree produced by svlogParser#mos_switch_instance.
svlogParserListener.prototype.enterMos_switch_instance = function(ctx) {
};

// Exit a parse tree produced by svlogParser#mos_switch_instance.
svlogParserListener.prototype.exitMos_switch_instance = function(ctx) {
};


// Enter a parse tree produced by svlogParser#n_input_gate_instance.
svlogParserListener.prototype.enterN_input_gate_instance = function(ctx) {
};

// Exit a parse tree produced by svlogParser#n_input_gate_instance.
svlogParserListener.prototype.exitN_input_gate_instance = function(ctx) {
};


// Enter a parse tree produced by svlogParser#n_output_gate_instance.
svlogParserListener.prototype.enterN_output_gate_instance = function(ctx) {
};

// Exit a parse tree produced by svlogParser#n_output_gate_instance.
svlogParserListener.prototype.exitN_output_gate_instance = function(ctx) {
};


// Enter a parse tree produced by svlogParser#pass_switch_instance.
svlogParserListener.prototype.enterPass_switch_instance = function(ctx) {
};

// Exit a parse tree produced by svlogParser#pass_switch_instance.
svlogParserListener.prototype.exitPass_switch_instance = function(ctx) {
};


// Enter a parse tree produced by svlogParser#pass_enable_switch_instance.
svlogParserListener.prototype.enterPass_enable_switch_instance = function(ctx) {
};

// Exit a parse tree produced by svlogParser#pass_enable_switch_instance.
svlogParserListener.prototype.exitPass_enable_switch_instance = function(ctx) {
};


// Enter a parse tree produced by svlogParser#pull_gate_instance.
svlogParserListener.prototype.enterPull_gate_instance = function(ctx) {
};

// Exit a parse tree produced by svlogParser#pull_gate_instance.
svlogParserListener.prototype.exitPull_gate_instance = function(ctx) {
};


// Enter a parse tree produced by svlogParser#pulldown_strength.
svlogParserListener.prototype.enterPulldown_strength = function(ctx) {
};

// Exit a parse tree produced by svlogParser#pulldown_strength.
svlogParserListener.prototype.exitPulldown_strength = function(ctx) {
};


// Enter a parse tree produced by svlogParser#pullup_strength.
svlogParserListener.prototype.enterPullup_strength = function(ctx) {
};

// Exit a parse tree produced by svlogParser#pullup_strength.
svlogParserListener.prototype.exitPullup_strength = function(ctx) {
};


// Enter a parse tree produced by svlogParser#enable_terminal.
svlogParserListener.prototype.enterEnable_terminal = function(ctx) {
};

// Exit a parse tree produced by svlogParser#enable_terminal.
svlogParserListener.prototype.exitEnable_terminal = function(ctx) {
};


// Enter a parse tree produced by svlogParser#inout_terminal.
svlogParserListener.prototype.enterInout_terminal = function(ctx) {
};

// Exit a parse tree produced by svlogParser#inout_terminal.
svlogParserListener.prototype.exitInout_terminal = function(ctx) {
};


// Enter a parse tree produced by svlogParser#input_terminal.
svlogParserListener.prototype.enterInput_terminal = function(ctx) {
};

// Exit a parse tree produced by svlogParser#input_terminal.
svlogParserListener.prototype.exitInput_terminal = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ncontrol_terminal.
svlogParserListener.prototype.enterNcontrol_terminal = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ncontrol_terminal.
svlogParserListener.prototype.exitNcontrol_terminal = function(ctx) {
};


// Enter a parse tree produced by svlogParser#output_terminal.
svlogParserListener.prototype.enterOutput_terminal = function(ctx) {
};

// Exit a parse tree produced by svlogParser#output_terminal.
svlogParserListener.prototype.exitOutput_terminal = function(ctx) {
};


// Enter a parse tree produced by svlogParser#pcontrol_terminal.
svlogParserListener.prototype.enterPcontrol_terminal = function(ctx) {
};

// Exit a parse tree produced by svlogParser#pcontrol_terminal.
svlogParserListener.prototype.exitPcontrol_terminal = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cmos_switchtype.
svlogParserListener.prototype.enterCmos_switchtype = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cmos_switchtype.
svlogParserListener.prototype.exitCmos_switchtype = function(ctx) {
};


// Enter a parse tree produced by svlogParser#enable_gatetype.
svlogParserListener.prototype.enterEnable_gatetype = function(ctx) {
};

// Exit a parse tree produced by svlogParser#enable_gatetype.
svlogParserListener.prototype.exitEnable_gatetype = function(ctx) {
};


// Enter a parse tree produced by svlogParser#mos_switchtype.
svlogParserListener.prototype.enterMos_switchtype = function(ctx) {
};

// Exit a parse tree produced by svlogParser#mos_switchtype.
svlogParserListener.prototype.exitMos_switchtype = function(ctx) {
};


// Enter a parse tree produced by svlogParser#n_input_gatetype.
svlogParserListener.prototype.enterN_input_gatetype = function(ctx) {
};

// Exit a parse tree produced by svlogParser#n_input_gatetype.
svlogParserListener.prototype.exitN_input_gatetype = function(ctx) {
};


// Enter a parse tree produced by svlogParser#n_output_gatetype.
svlogParserListener.prototype.enterN_output_gatetype = function(ctx) {
};

// Exit a parse tree produced by svlogParser#n_output_gatetype.
svlogParserListener.prototype.exitN_output_gatetype = function(ctx) {
};


// Enter a parse tree produced by svlogParser#pass_en_switchtype.
svlogParserListener.prototype.enterPass_en_switchtype = function(ctx) {
};

// Exit a parse tree produced by svlogParser#pass_en_switchtype.
svlogParserListener.prototype.exitPass_en_switchtype = function(ctx) {
};


// Enter a parse tree produced by svlogParser#pass_switchtype.
svlogParserListener.prototype.enterPass_switchtype = function(ctx) {
};

// Exit a parse tree produced by svlogParser#pass_switchtype.
svlogParserListener.prototype.exitPass_switchtype = function(ctx) {
};


// Enter a parse tree produced by svlogParser#module_instantiation.
svlogParserListener.prototype.enterModule_instantiation = function(ctx) {
};

// Exit a parse tree produced by svlogParser#module_instantiation.
svlogParserListener.prototype.exitModule_instantiation = function(ctx) {
};


// Enter a parse tree produced by svlogParser#parameter_value_assignment.
svlogParserListener.prototype.enterParameter_value_assignment = function(ctx) {
};

// Exit a parse tree produced by svlogParser#parameter_value_assignment.
svlogParserListener.prototype.exitParameter_value_assignment = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_parameter_assignments.
svlogParserListener.prototype.enterList_of_parameter_assignments = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_parameter_assignments.
svlogParserListener.prototype.exitList_of_parameter_assignments = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ordered_parameter_assignment.
svlogParserListener.prototype.enterOrdered_parameter_assignment = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ordered_parameter_assignment.
svlogParserListener.prototype.exitOrdered_parameter_assignment = function(ctx) {
};


// Enter a parse tree produced by svlogParser#named_parameter_assignment.
svlogParserListener.prototype.enterNamed_parameter_assignment = function(ctx) {
};

// Exit a parse tree produced by svlogParser#named_parameter_assignment.
svlogParserListener.prototype.exitNamed_parameter_assignment = function(ctx) {
};


// Enter a parse tree produced by svlogParser#hierarchical_instance.
svlogParserListener.prototype.enterHierarchical_instance = function(ctx) {
};

// Exit a parse tree produced by svlogParser#hierarchical_instance.
svlogParserListener.prototype.exitHierarchical_instance = function(ctx) {
};


// Enter a parse tree produced by svlogParser#name_of_instance.
svlogParserListener.prototype.enterName_of_instance = function(ctx) {
};

// Exit a parse tree produced by svlogParser#name_of_instance.
svlogParserListener.prototype.exitName_of_instance = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_port_connections.
svlogParserListener.prototype.enterList_of_port_connections = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_port_connections.
svlogParserListener.prototype.exitList_of_port_connections = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ordered_port_connection.
svlogParserListener.prototype.enterOrdered_port_connection = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ordered_port_connection.
svlogParserListener.prototype.exitOrdered_port_connection = function(ctx) {
};


// Enter a parse tree produced by svlogParser#named_port_connection.
svlogParserListener.prototype.enterNamed_port_connection = function(ctx) {
};

// Exit a parse tree produced by svlogParser#named_port_connection.
svlogParserListener.prototype.exitNamed_port_connection = function(ctx) {
};


// Enter a parse tree produced by svlogParser#interface_instantiation.
svlogParserListener.prototype.enterInterface_instantiation = function(ctx) {
};

// Exit a parse tree produced by svlogParser#interface_instantiation.
svlogParserListener.prototype.exitInterface_instantiation = function(ctx) {
};


// Enter a parse tree produced by svlogParser#program_instantiation.
svlogParserListener.prototype.enterProgram_instantiation = function(ctx) {
};

// Exit a parse tree produced by svlogParser#program_instantiation.
svlogParserListener.prototype.exitProgram_instantiation = function(ctx) {
};


// Enter a parse tree produced by svlogParser#checker_instantiation.
svlogParserListener.prototype.enterChecker_instantiation = function(ctx) {
};

// Exit a parse tree produced by svlogParser#checker_instantiation.
svlogParserListener.prototype.exitChecker_instantiation = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_checker_port_connections.
svlogParserListener.prototype.enterList_of_checker_port_connections = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_checker_port_connections.
svlogParserListener.prototype.exitList_of_checker_port_connections = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ordered_checker_port_connection.
svlogParserListener.prototype.enterOrdered_checker_port_connection = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ordered_checker_port_connection.
svlogParserListener.prototype.exitOrdered_checker_port_connection = function(ctx) {
};


// Enter a parse tree produced by svlogParser#named_checker_port_connection.
svlogParserListener.prototype.enterNamed_checker_port_connection = function(ctx) {
};

// Exit a parse tree produced by svlogParser#named_checker_port_connection.
svlogParserListener.prototype.exitNamed_checker_port_connection = function(ctx) {
};


// Enter a parse tree produced by svlogParser#generate_region.
svlogParserListener.prototype.enterGenerate_region = function(ctx) {
};

// Exit a parse tree produced by svlogParser#generate_region.
svlogParserListener.prototype.exitGenerate_region = function(ctx) {
};


// Enter a parse tree produced by svlogParser#loop_generate_construct.
svlogParserListener.prototype.enterLoop_generate_construct = function(ctx) {
};

// Exit a parse tree produced by svlogParser#loop_generate_construct.
svlogParserListener.prototype.exitLoop_generate_construct = function(ctx) {
};


// Enter a parse tree produced by svlogParser#genvar_initialization.
svlogParserListener.prototype.enterGenvar_initialization = function(ctx) {
};

// Exit a parse tree produced by svlogParser#genvar_initialization.
svlogParserListener.prototype.exitGenvar_initialization = function(ctx) {
};


// Enter a parse tree produced by svlogParser#genvar_iteration.
svlogParserListener.prototype.enterGenvar_iteration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#genvar_iteration.
svlogParserListener.prototype.exitGenvar_iteration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#conditional_generate_construct.
svlogParserListener.prototype.enterConditional_generate_construct = function(ctx) {
};

// Exit a parse tree produced by svlogParser#conditional_generate_construct.
svlogParserListener.prototype.exitConditional_generate_construct = function(ctx) {
};


// Enter a parse tree produced by svlogParser#if_generate_construct.
svlogParserListener.prototype.enterIf_generate_construct = function(ctx) {
};

// Exit a parse tree produced by svlogParser#if_generate_construct.
svlogParserListener.prototype.exitIf_generate_construct = function(ctx) {
};


// Enter a parse tree produced by svlogParser#case_generate_construct.
svlogParserListener.prototype.enterCase_generate_construct = function(ctx) {
};

// Exit a parse tree produced by svlogParser#case_generate_construct.
svlogParserListener.prototype.exitCase_generate_construct = function(ctx) {
};


// Enter a parse tree produced by svlogParser#case_generate_item.
svlogParserListener.prototype.enterCase_generate_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#case_generate_item.
svlogParserListener.prototype.exitCase_generate_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#generate_block.
svlogParserListener.prototype.enterGenerate_block = function(ctx) {
};

// Exit a parse tree produced by svlogParser#generate_block.
svlogParserListener.prototype.exitGenerate_block = function(ctx) {
};


// Enter a parse tree produced by svlogParser#generate_item.
svlogParserListener.prototype.enterGenerate_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#generate_item.
svlogParserListener.prototype.exitGenerate_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#udp_nonansi_declaration.
svlogParserListener.prototype.enterUdp_nonansi_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#udp_nonansi_declaration.
svlogParserListener.prototype.exitUdp_nonansi_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#udp_ansi_declaration.
svlogParserListener.prototype.enterUdp_ansi_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#udp_ansi_declaration.
svlogParserListener.prototype.exitUdp_ansi_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#udp_declaration.
svlogParserListener.prototype.enterUdp_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#udp_declaration.
svlogParserListener.prototype.exitUdp_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#udp_port_list.
svlogParserListener.prototype.enterUdp_port_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#udp_port_list.
svlogParserListener.prototype.exitUdp_port_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#udp_declaration_port_list.
svlogParserListener.prototype.enterUdp_declaration_port_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#udp_declaration_port_list.
svlogParserListener.prototype.exitUdp_declaration_port_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#udp_port_declaration.
svlogParserListener.prototype.enterUdp_port_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#udp_port_declaration.
svlogParserListener.prototype.exitUdp_port_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#udp_output_declaration.
svlogParserListener.prototype.enterUdp_output_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#udp_output_declaration.
svlogParserListener.prototype.exitUdp_output_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#udp_input_declaration.
svlogParserListener.prototype.enterUdp_input_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#udp_input_declaration.
svlogParserListener.prototype.exitUdp_input_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#udp_reg_declaration.
svlogParserListener.prototype.enterUdp_reg_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#udp_reg_declaration.
svlogParserListener.prototype.exitUdp_reg_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#udp_body.
svlogParserListener.prototype.enterUdp_body = function(ctx) {
};

// Exit a parse tree produced by svlogParser#udp_body.
svlogParserListener.prototype.exitUdp_body = function(ctx) {
};


// Enter a parse tree produced by svlogParser#combinational_body.
svlogParserListener.prototype.enterCombinational_body = function(ctx) {
};

// Exit a parse tree produced by svlogParser#combinational_body.
svlogParserListener.prototype.exitCombinational_body = function(ctx) {
};


// Enter a parse tree produced by svlogParser#combinational_entry.
svlogParserListener.prototype.enterCombinational_entry = function(ctx) {
};

// Exit a parse tree produced by svlogParser#combinational_entry.
svlogParserListener.prototype.exitCombinational_entry = function(ctx) {
};


// Enter a parse tree produced by svlogParser#sequential_body.
svlogParserListener.prototype.enterSequential_body = function(ctx) {
};

// Exit a parse tree produced by svlogParser#sequential_body.
svlogParserListener.prototype.exitSequential_body = function(ctx) {
};


// Enter a parse tree produced by svlogParser#udp_initial_statement.
svlogParserListener.prototype.enterUdp_initial_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#udp_initial_statement.
svlogParserListener.prototype.exitUdp_initial_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#init_val.
svlogParserListener.prototype.enterInit_val = function(ctx) {
};

// Exit a parse tree produced by svlogParser#init_val.
svlogParserListener.prototype.exitInit_val = function(ctx) {
};


// Enter a parse tree produced by svlogParser#sequential_entry.
svlogParserListener.prototype.enterSequential_entry = function(ctx) {
};

// Exit a parse tree produced by svlogParser#sequential_entry.
svlogParserListener.prototype.exitSequential_entry = function(ctx) {
};


// Enter a parse tree produced by svlogParser#seq_input_list.
svlogParserListener.prototype.enterSeq_input_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#seq_input_list.
svlogParserListener.prototype.exitSeq_input_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#level_input_list.
svlogParserListener.prototype.enterLevel_input_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#level_input_list.
svlogParserListener.prototype.exitLevel_input_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#edge_input_list.
svlogParserListener.prototype.enterEdge_input_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#edge_input_list.
svlogParserListener.prototype.exitEdge_input_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#edge_indicator.
svlogParserListener.prototype.enterEdge_indicator = function(ctx) {
};

// Exit a parse tree produced by svlogParser#edge_indicator.
svlogParserListener.prototype.exitEdge_indicator = function(ctx) {
};


// Enter a parse tree produced by svlogParser#current_state.
svlogParserListener.prototype.enterCurrent_state = function(ctx) {
};

// Exit a parse tree produced by svlogParser#current_state.
svlogParserListener.prototype.exitCurrent_state = function(ctx) {
};


// Enter a parse tree produced by svlogParser#next_state.
svlogParserListener.prototype.enterNext_state = function(ctx) {
};

// Exit a parse tree produced by svlogParser#next_state.
svlogParserListener.prototype.exitNext_state = function(ctx) {
};


// Enter a parse tree produced by svlogParser#output_symbol.
svlogParserListener.prototype.enterOutput_symbol = function(ctx) {
};

// Exit a parse tree produced by svlogParser#output_symbol.
svlogParserListener.prototype.exitOutput_symbol = function(ctx) {
};


// Enter a parse tree produced by svlogParser#level_symbol.
svlogParserListener.prototype.enterLevel_symbol = function(ctx) {
};

// Exit a parse tree produced by svlogParser#level_symbol.
svlogParserListener.prototype.exitLevel_symbol = function(ctx) {
};


// Enter a parse tree produced by svlogParser#edge_symbol.
svlogParserListener.prototype.enterEdge_symbol = function(ctx) {
};

// Exit a parse tree produced by svlogParser#edge_symbol.
svlogParserListener.prototype.exitEdge_symbol = function(ctx) {
};


// Enter a parse tree produced by svlogParser#udp_instantiation.
svlogParserListener.prototype.enterUdp_instantiation = function(ctx) {
};

// Exit a parse tree produced by svlogParser#udp_instantiation.
svlogParserListener.prototype.exitUdp_instantiation = function(ctx) {
};


// Enter a parse tree produced by svlogParser#udp_instance.
svlogParserListener.prototype.enterUdp_instance = function(ctx) {
};

// Exit a parse tree produced by svlogParser#udp_instance.
svlogParserListener.prototype.exitUdp_instance = function(ctx) {
};


// Enter a parse tree produced by svlogParser#continuous_assign.
svlogParserListener.prototype.enterContinuous_assign = function(ctx) {
};

// Exit a parse tree produced by svlogParser#continuous_assign.
svlogParserListener.prototype.exitContinuous_assign = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_net_assignments.
svlogParserListener.prototype.enterList_of_net_assignments = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_net_assignments.
svlogParserListener.prototype.exitList_of_net_assignments = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_variable_assignments.
svlogParserListener.prototype.enterList_of_variable_assignments = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_variable_assignments.
svlogParserListener.prototype.exitList_of_variable_assignments = function(ctx) {
};


// Enter a parse tree produced by svlogParser#net_alias.
svlogParserListener.prototype.enterNet_alias = function(ctx) {
};

// Exit a parse tree produced by svlogParser#net_alias.
svlogParserListener.prototype.exitNet_alias = function(ctx) {
};


// Enter a parse tree produced by svlogParser#net_assignment.
svlogParserListener.prototype.enterNet_assignment = function(ctx) {
};

// Exit a parse tree produced by svlogParser#net_assignment.
svlogParserListener.prototype.exitNet_assignment = function(ctx) {
};


// Enter a parse tree produced by svlogParser#initial_construct.
svlogParserListener.prototype.enterInitial_construct = function(ctx) {
};

// Exit a parse tree produced by svlogParser#initial_construct.
svlogParserListener.prototype.exitInitial_construct = function(ctx) {
};


// Enter a parse tree produced by svlogParser#always_construct.
svlogParserListener.prototype.enterAlways_construct = function(ctx) {
};

// Exit a parse tree produced by svlogParser#always_construct.
svlogParserListener.prototype.exitAlways_construct = function(ctx) {
};


// Enter a parse tree produced by svlogParser#always_keyword.
svlogParserListener.prototype.enterAlways_keyword = function(ctx) {
};

// Exit a parse tree produced by svlogParser#always_keyword.
svlogParserListener.prototype.exitAlways_keyword = function(ctx) {
};


// Enter a parse tree produced by svlogParser#final_construct.
svlogParserListener.prototype.enterFinal_construct = function(ctx) {
};

// Exit a parse tree produced by svlogParser#final_construct.
svlogParserListener.prototype.exitFinal_construct = function(ctx) {
};


// Enter a parse tree produced by svlogParser#blocking_assignment.
svlogParserListener.prototype.enterBlocking_assignment = function(ctx) {
};

// Exit a parse tree produced by svlogParser#blocking_assignment.
svlogParserListener.prototype.exitBlocking_assignment = function(ctx) {
};


// Enter a parse tree produced by svlogParser#operator_assignment.
svlogParserListener.prototype.enterOperator_assignment = function(ctx) {
};

// Exit a parse tree produced by svlogParser#operator_assignment.
svlogParserListener.prototype.exitOperator_assignment = function(ctx) {
};


// Enter a parse tree produced by svlogParser#assignment_operator.
svlogParserListener.prototype.enterAssignment_operator = function(ctx) {
};

// Exit a parse tree produced by svlogParser#assignment_operator.
svlogParserListener.prototype.exitAssignment_operator = function(ctx) {
};


// Enter a parse tree produced by svlogParser#nonblocking_assignment.
svlogParserListener.prototype.enterNonblocking_assignment = function(ctx) {
};

// Exit a parse tree produced by svlogParser#nonblocking_assignment.
svlogParserListener.prototype.exitNonblocking_assignment = function(ctx) {
};


// Enter a parse tree produced by svlogParser#procedural_continuous_assignment.
svlogParserListener.prototype.enterProcedural_continuous_assignment = function(ctx) {
};

// Exit a parse tree produced by svlogParser#procedural_continuous_assignment.
svlogParserListener.prototype.exitProcedural_continuous_assignment = function(ctx) {
};


// Enter a parse tree produced by svlogParser#variable_assignment.
svlogParserListener.prototype.enterVariable_assignment = function(ctx) {
};

// Exit a parse tree produced by svlogParser#variable_assignment.
svlogParserListener.prototype.exitVariable_assignment = function(ctx) {
};


// Enter a parse tree produced by svlogParser#action_block.
svlogParserListener.prototype.enterAction_block = function(ctx) {
};

// Exit a parse tree produced by svlogParser#action_block.
svlogParserListener.prototype.exitAction_block = function(ctx) {
};


// Enter a parse tree produced by svlogParser#seq_block.
svlogParserListener.prototype.enterSeq_block = function(ctx) {
};

// Exit a parse tree produced by svlogParser#seq_block.
svlogParserListener.prototype.exitSeq_block = function(ctx) {
};


// Enter a parse tree produced by svlogParser#par_block.
svlogParserListener.prototype.enterPar_block = function(ctx) {
};

// Exit a parse tree produced by svlogParser#par_block.
svlogParserListener.prototype.exitPar_block = function(ctx) {
};


// Enter a parse tree produced by svlogParser#join_keyword.
svlogParserListener.prototype.enterJoin_keyword = function(ctx) {
};

// Exit a parse tree produced by svlogParser#join_keyword.
svlogParserListener.prototype.exitJoin_keyword = function(ctx) {
};


// Enter a parse tree produced by svlogParser#statement_or_null.
svlogParserListener.prototype.enterStatement_or_null = function(ctx) {
};

// Exit a parse tree produced by svlogParser#statement_or_null.
svlogParserListener.prototype.exitStatement_or_null = function(ctx) {
};


// Enter a parse tree produced by svlogParser#statement.
svlogParserListener.prototype.enterStatement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#statement.
svlogParserListener.prototype.exitStatement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#statement_item.
svlogParserListener.prototype.enterStatement_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#statement_item.
svlogParserListener.prototype.exitStatement_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#function_statement.
svlogParserListener.prototype.enterFunction_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#function_statement.
svlogParserListener.prototype.exitFunction_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#function_statement_or_null.
svlogParserListener.prototype.enterFunction_statement_or_null = function(ctx) {
};

// Exit a parse tree produced by svlogParser#function_statement_or_null.
svlogParserListener.prototype.exitFunction_statement_or_null = function(ctx) {
};


// Enter a parse tree produced by svlogParser#variable_identifier_list.
svlogParserListener.prototype.enterVariable_identifier_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#variable_identifier_list.
svlogParserListener.prototype.exitVariable_identifier_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#procedural_timing_control_statement.
svlogParserListener.prototype.enterProcedural_timing_control_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#procedural_timing_control_statement.
svlogParserListener.prototype.exitProcedural_timing_control_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#delay_or_event_control.
svlogParserListener.prototype.enterDelay_or_event_control = function(ctx) {
};

// Exit a parse tree produced by svlogParser#delay_or_event_control.
svlogParserListener.prototype.exitDelay_or_event_control = function(ctx) {
};


// Enter a parse tree produced by svlogParser#delay_control.
svlogParserListener.prototype.enterDelay_control = function(ctx) {
};

// Exit a parse tree produced by svlogParser#delay_control.
svlogParserListener.prototype.exitDelay_control = function(ctx) {
};


// Enter a parse tree produced by svlogParser#event_control.
svlogParserListener.prototype.enterEvent_control = function(ctx) {
};

// Exit a parse tree produced by svlogParser#event_control.
svlogParserListener.prototype.exitEvent_control = function(ctx) {
};


// Enter a parse tree produced by svlogParser#event_expression.
svlogParserListener.prototype.enterEvent_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#event_expression.
svlogParserListener.prototype.exitEvent_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#procedural_timing_control.
svlogParserListener.prototype.enterProcedural_timing_control = function(ctx) {
};

// Exit a parse tree produced by svlogParser#procedural_timing_control.
svlogParserListener.prototype.exitProcedural_timing_control = function(ctx) {
};


// Enter a parse tree produced by svlogParser#jump_statement.
svlogParserListener.prototype.enterJump_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#jump_statement.
svlogParserListener.prototype.exitJump_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#wait_statement.
svlogParserListener.prototype.enterWait_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#wait_statement.
svlogParserListener.prototype.exitWait_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#event_trigger.
svlogParserListener.prototype.enterEvent_trigger = function(ctx) {
};

// Exit a parse tree produced by svlogParser#event_trigger.
svlogParserListener.prototype.exitEvent_trigger = function(ctx) {
};


// Enter a parse tree produced by svlogParser#disable_statement.
svlogParserListener.prototype.enterDisable_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#disable_statement.
svlogParserListener.prototype.exitDisable_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#conditional_statement.
svlogParserListener.prototype.enterConditional_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#conditional_statement.
svlogParserListener.prototype.exitConditional_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#unique_priority.
svlogParserListener.prototype.enterUnique_priority = function(ctx) {
};

// Exit a parse tree produced by svlogParser#unique_priority.
svlogParserListener.prototype.exitUnique_priority = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cond_predicate.
svlogParserListener.prototype.enterCond_predicate = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cond_predicate.
svlogParserListener.prototype.exitCond_predicate = function(ctx) {
};


// Enter a parse tree produced by svlogParser#expression_or_cond_pattern.
svlogParserListener.prototype.enterExpression_or_cond_pattern = function(ctx) {
};

// Exit a parse tree produced by svlogParser#expression_or_cond_pattern.
svlogParserListener.prototype.exitExpression_or_cond_pattern = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cond_pattern.
svlogParserListener.prototype.enterCond_pattern = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cond_pattern.
svlogParserListener.prototype.exitCond_pattern = function(ctx) {
};


// Enter a parse tree produced by svlogParser#case_statement.
svlogParserListener.prototype.enterCase_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#case_statement.
svlogParserListener.prototype.exitCase_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#case_keyword.
svlogParserListener.prototype.enterCase_keyword = function(ctx) {
};

// Exit a parse tree produced by svlogParser#case_keyword.
svlogParserListener.prototype.exitCase_keyword = function(ctx) {
};


// Enter a parse tree produced by svlogParser#case_expression.
svlogParserListener.prototype.enterCase_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#case_expression.
svlogParserListener.prototype.exitCase_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#case_item.
svlogParserListener.prototype.enterCase_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#case_item.
svlogParserListener.prototype.exitCase_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#case_pattern_item.
svlogParserListener.prototype.enterCase_pattern_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#case_pattern_item.
svlogParserListener.prototype.exitCase_pattern_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#case_inside_item.
svlogParserListener.prototype.enterCase_inside_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#case_inside_item.
svlogParserListener.prototype.exitCase_inside_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#case_item_expression.
svlogParserListener.prototype.enterCase_item_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#case_item_expression.
svlogParserListener.prototype.exitCase_item_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#randcase_statement.
svlogParserListener.prototype.enterRandcase_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#randcase_statement.
svlogParserListener.prototype.exitRandcase_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#randcase_item.
svlogParserListener.prototype.enterRandcase_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#randcase_item.
svlogParserListener.prototype.exitRandcase_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#open_range_list.
svlogParserListener.prototype.enterOpen_range_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#open_range_list.
svlogParserListener.prototype.exitOpen_range_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#open_value_range.
svlogParserListener.prototype.enterOpen_value_range = function(ctx) {
};

// Exit a parse tree produced by svlogParser#open_value_range.
svlogParserListener.prototype.exitOpen_value_range = function(ctx) {
};


// Enter a parse tree produced by svlogParser#pattern.
svlogParserListener.prototype.enterPattern = function(ctx) {
};

// Exit a parse tree produced by svlogParser#pattern.
svlogParserListener.prototype.exitPattern = function(ctx) {
};


// Enter a parse tree produced by svlogParser#assignment_pattern.
svlogParserListener.prototype.enterAssignment_pattern = function(ctx) {
};

// Exit a parse tree produced by svlogParser#assignment_pattern.
svlogParserListener.prototype.exitAssignment_pattern = function(ctx) {
};


// Enter a parse tree produced by svlogParser#structure_pattern_key.
svlogParserListener.prototype.enterStructure_pattern_key = function(ctx) {
};

// Exit a parse tree produced by svlogParser#structure_pattern_key.
svlogParserListener.prototype.exitStructure_pattern_key = function(ctx) {
};


// Enter a parse tree produced by svlogParser#array_pattern_key.
svlogParserListener.prototype.enterArray_pattern_key = function(ctx) {
};

// Exit a parse tree produced by svlogParser#array_pattern_key.
svlogParserListener.prototype.exitArray_pattern_key = function(ctx) {
};


// Enter a parse tree produced by svlogParser#assignment_pattern_key.
svlogParserListener.prototype.enterAssignment_pattern_key = function(ctx) {
};

// Exit a parse tree produced by svlogParser#assignment_pattern_key.
svlogParserListener.prototype.exitAssignment_pattern_key = function(ctx) {
};


// Enter a parse tree produced by svlogParser#assignment_pattern_expression.
svlogParserListener.prototype.enterAssignment_pattern_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#assignment_pattern_expression.
svlogParserListener.prototype.exitAssignment_pattern_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#assignment_pattern_expression_type.
svlogParserListener.prototype.enterAssignment_pattern_expression_type = function(ctx) {
};

// Exit a parse tree produced by svlogParser#assignment_pattern_expression_type.
svlogParserListener.prototype.exitAssignment_pattern_expression_type = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constant_assignment_pattern_expression.
svlogParserListener.prototype.enterConstant_assignment_pattern_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constant_assignment_pattern_expression.
svlogParserListener.prototype.exitConstant_assignment_pattern_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#assignment_pattern_net_lvalue.
svlogParserListener.prototype.enterAssignment_pattern_net_lvalue = function(ctx) {
};

// Exit a parse tree produced by svlogParser#assignment_pattern_net_lvalue.
svlogParserListener.prototype.exitAssignment_pattern_net_lvalue = function(ctx) {
};


// Enter a parse tree produced by svlogParser#assignment_pattern_variable_lvalue.
svlogParserListener.prototype.enterAssignment_pattern_variable_lvalue = function(ctx) {
};

// Exit a parse tree produced by svlogParser#assignment_pattern_variable_lvalue.
svlogParserListener.prototype.exitAssignment_pattern_variable_lvalue = function(ctx) {
};


// Enter a parse tree produced by svlogParser#loop_statement.
svlogParserListener.prototype.enterLoop_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#loop_statement.
svlogParserListener.prototype.exitLoop_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#for_initialization.
svlogParserListener.prototype.enterFor_initialization = function(ctx) {
};

// Exit a parse tree produced by svlogParser#for_initialization.
svlogParserListener.prototype.exitFor_initialization = function(ctx) {
};


// Enter a parse tree produced by svlogParser#for_variable_declaration.
svlogParserListener.prototype.enterFor_variable_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#for_variable_declaration.
svlogParserListener.prototype.exitFor_variable_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#for_step.
svlogParserListener.prototype.enterFor_step = function(ctx) {
};

// Exit a parse tree produced by svlogParser#for_step.
svlogParserListener.prototype.exitFor_step = function(ctx) {
};


// Enter a parse tree produced by svlogParser#for_step_assignment.
svlogParserListener.prototype.enterFor_step_assignment = function(ctx) {
};

// Exit a parse tree produced by svlogParser#for_step_assignment.
svlogParserListener.prototype.exitFor_step_assignment = function(ctx) {
};


// Enter a parse tree produced by svlogParser#loop_variables.
svlogParserListener.prototype.enterLoop_variables = function(ctx) {
};

// Exit a parse tree produced by svlogParser#loop_variables.
svlogParserListener.prototype.exitLoop_variables = function(ctx) {
};


// Enter a parse tree produced by svlogParser#subroutine_call_statement.
svlogParserListener.prototype.enterSubroutine_call_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#subroutine_call_statement.
svlogParserListener.prototype.exitSubroutine_call_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#assertion_item.
svlogParserListener.prototype.enterAssertion_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#assertion_item.
svlogParserListener.prototype.exitAssertion_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#deferred_immediate_assertion_item.
svlogParserListener.prototype.enterDeferred_immediate_assertion_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#deferred_immediate_assertion_item.
svlogParserListener.prototype.exitDeferred_immediate_assertion_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#procedural_assertion_statement.
svlogParserListener.prototype.enterProcedural_assertion_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#procedural_assertion_statement.
svlogParserListener.prototype.exitProcedural_assertion_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#immediate_assertion_statement.
svlogParserListener.prototype.enterImmediate_assertion_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#immediate_assertion_statement.
svlogParserListener.prototype.exitImmediate_assertion_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#simple_immediate_assertion_statement.
svlogParserListener.prototype.enterSimple_immediate_assertion_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#simple_immediate_assertion_statement.
svlogParserListener.prototype.exitSimple_immediate_assertion_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#simple_immediate_assert_statement.
svlogParserListener.prototype.enterSimple_immediate_assert_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#simple_immediate_assert_statement.
svlogParserListener.prototype.exitSimple_immediate_assert_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#simple_immediate_assume_statement.
svlogParserListener.prototype.enterSimple_immediate_assume_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#simple_immediate_assume_statement.
svlogParserListener.prototype.exitSimple_immediate_assume_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#simple_immediate_cover_statement.
svlogParserListener.prototype.enterSimple_immediate_cover_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#simple_immediate_cover_statement.
svlogParserListener.prototype.exitSimple_immediate_cover_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#deferred_immediate_assertion_statement.
svlogParserListener.prototype.enterDeferred_immediate_assertion_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#deferred_immediate_assertion_statement.
svlogParserListener.prototype.exitDeferred_immediate_assertion_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#deferred_immediate_assert_statement.
svlogParserListener.prototype.enterDeferred_immediate_assert_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#deferred_immediate_assert_statement.
svlogParserListener.prototype.exitDeferred_immediate_assert_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#deferred_immediate_assume_statement.
svlogParserListener.prototype.enterDeferred_immediate_assume_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#deferred_immediate_assume_statement.
svlogParserListener.prototype.exitDeferred_immediate_assume_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#deferred_immediate_cover_statement.
svlogParserListener.prototype.enterDeferred_immediate_cover_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#deferred_immediate_cover_statement.
svlogParserListener.prototype.exitDeferred_immediate_cover_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#clocking_declaration.
svlogParserListener.prototype.enterClocking_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#clocking_declaration.
svlogParserListener.prototype.exitClocking_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#clocking_event.
svlogParserListener.prototype.enterClocking_event = function(ctx) {
};

// Exit a parse tree produced by svlogParser#clocking_event.
svlogParserListener.prototype.exitClocking_event = function(ctx) {
};


// Enter a parse tree produced by svlogParser#clocking_item.
svlogParserListener.prototype.enterClocking_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#clocking_item.
svlogParserListener.prototype.exitClocking_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#default_skew.
svlogParserListener.prototype.enterDefault_skew = function(ctx) {
};

// Exit a parse tree produced by svlogParser#default_skew.
svlogParserListener.prototype.exitDefault_skew = function(ctx) {
};


// Enter a parse tree produced by svlogParser#clocking_direction.
svlogParserListener.prototype.enterClocking_direction = function(ctx) {
};

// Exit a parse tree produced by svlogParser#clocking_direction.
svlogParserListener.prototype.exitClocking_direction = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_clocking_decl_assign.
svlogParserListener.prototype.enterList_of_clocking_decl_assign = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_clocking_decl_assign.
svlogParserListener.prototype.exitList_of_clocking_decl_assign = function(ctx) {
};


// Enter a parse tree produced by svlogParser#clocking_decl_assign.
svlogParserListener.prototype.enterClocking_decl_assign = function(ctx) {
};

// Exit a parse tree produced by svlogParser#clocking_decl_assign.
svlogParserListener.prototype.exitClocking_decl_assign = function(ctx) {
};


// Enter a parse tree produced by svlogParser#clocking_skew.
svlogParserListener.prototype.enterClocking_skew = function(ctx) {
};

// Exit a parse tree produced by svlogParser#clocking_skew.
svlogParserListener.prototype.exitClocking_skew = function(ctx) {
};


// Enter a parse tree produced by svlogParser#clocking_drive.
svlogParserListener.prototype.enterClocking_drive = function(ctx) {
};

// Exit a parse tree produced by svlogParser#clocking_drive.
svlogParserListener.prototype.exitClocking_drive = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cycle_delay.
svlogParserListener.prototype.enterCycle_delay = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cycle_delay.
svlogParserListener.prototype.exitCycle_delay = function(ctx) {
};


// Enter a parse tree produced by svlogParser#clockvar.
svlogParserListener.prototype.enterClockvar = function(ctx) {
};

// Exit a parse tree produced by svlogParser#clockvar.
svlogParserListener.prototype.exitClockvar = function(ctx) {
};


// Enter a parse tree produced by svlogParser#clockvar_expression.
svlogParserListener.prototype.enterClockvar_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#clockvar_expression.
svlogParserListener.prototype.exitClockvar_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#randsequence_statement.
svlogParserListener.prototype.enterRandsequence_statement = function(ctx) {
};

// Exit a parse tree produced by svlogParser#randsequence_statement.
svlogParserListener.prototype.exitRandsequence_statement = function(ctx) {
};


// Enter a parse tree produced by svlogParser#production.
svlogParserListener.prototype.enterProduction = function(ctx) {
};

// Exit a parse tree produced by svlogParser#production.
svlogParserListener.prototype.exitProduction = function(ctx) {
};


// Enter a parse tree produced by svlogParser#rs_rule.
svlogParserListener.prototype.enterRs_rule = function(ctx) {
};

// Exit a parse tree produced by svlogParser#rs_rule.
svlogParserListener.prototype.exitRs_rule = function(ctx) {
};


// Enter a parse tree produced by svlogParser#rs_production_list.
svlogParserListener.prototype.enterRs_production_list = function(ctx) {
};

// Exit a parse tree produced by svlogParser#rs_production_list.
svlogParserListener.prototype.exitRs_production_list = function(ctx) {
};


// Enter a parse tree produced by svlogParser#weight_specification.
svlogParserListener.prototype.enterWeight_specification = function(ctx) {
};

// Exit a parse tree produced by svlogParser#weight_specification.
svlogParserListener.prototype.exitWeight_specification = function(ctx) {
};


// Enter a parse tree produced by svlogParser#rs_code_block.
svlogParserListener.prototype.enterRs_code_block = function(ctx) {
};

// Exit a parse tree produced by svlogParser#rs_code_block.
svlogParserListener.prototype.exitRs_code_block = function(ctx) {
};


// Enter a parse tree produced by svlogParser#rs_prod.
svlogParserListener.prototype.enterRs_prod = function(ctx) {
};

// Exit a parse tree produced by svlogParser#rs_prod.
svlogParserListener.prototype.exitRs_prod = function(ctx) {
};


// Enter a parse tree produced by svlogParser#production_item.
svlogParserListener.prototype.enterProduction_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#production_item.
svlogParserListener.prototype.exitProduction_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#rs_if_else.
svlogParserListener.prototype.enterRs_if_else = function(ctx) {
};

// Exit a parse tree produced by svlogParser#rs_if_else.
svlogParserListener.prototype.exitRs_if_else = function(ctx) {
};


// Enter a parse tree produced by svlogParser#rs_repeat.
svlogParserListener.prototype.enterRs_repeat = function(ctx) {
};

// Exit a parse tree produced by svlogParser#rs_repeat.
svlogParserListener.prototype.exitRs_repeat = function(ctx) {
};


// Enter a parse tree produced by svlogParser#rs_case.
svlogParserListener.prototype.enterRs_case = function(ctx) {
};

// Exit a parse tree produced by svlogParser#rs_case.
svlogParserListener.prototype.exitRs_case = function(ctx) {
};


// Enter a parse tree produced by svlogParser#rs_case_item.
svlogParserListener.prototype.enterRs_case_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#rs_case_item.
svlogParserListener.prototype.exitRs_case_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#specify_block.
svlogParserListener.prototype.enterSpecify_block = function(ctx) {
};

// Exit a parse tree produced by svlogParser#specify_block.
svlogParserListener.prototype.exitSpecify_block = function(ctx) {
};


// Enter a parse tree produced by svlogParser#specify_item.
svlogParserListener.prototype.enterSpecify_item = function(ctx) {
};

// Exit a parse tree produced by svlogParser#specify_item.
svlogParserListener.prototype.exitSpecify_item = function(ctx) {
};


// Enter a parse tree produced by svlogParser#pulsestyle_declaration.
svlogParserListener.prototype.enterPulsestyle_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#pulsestyle_declaration.
svlogParserListener.prototype.exitPulsestyle_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#showcancelled_declaration.
svlogParserListener.prototype.enterShowcancelled_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#showcancelled_declaration.
svlogParserListener.prototype.exitShowcancelled_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#path_declaration.
svlogParserListener.prototype.enterPath_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#path_declaration.
svlogParserListener.prototype.exitPath_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#simple_path_declaration.
svlogParserListener.prototype.enterSimple_path_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#simple_path_declaration.
svlogParserListener.prototype.exitSimple_path_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#parallel_path_description.
svlogParserListener.prototype.enterParallel_path_description = function(ctx) {
};

// Exit a parse tree produced by svlogParser#parallel_path_description.
svlogParserListener.prototype.exitParallel_path_description = function(ctx) {
};


// Enter a parse tree produced by svlogParser#full_path_description.
svlogParserListener.prototype.enterFull_path_description = function(ctx) {
};

// Exit a parse tree produced by svlogParser#full_path_description.
svlogParserListener.prototype.exitFull_path_description = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_path_inputs.
svlogParserListener.prototype.enterList_of_path_inputs = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_path_inputs.
svlogParserListener.prototype.exitList_of_path_inputs = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_path_outputs.
svlogParserListener.prototype.enterList_of_path_outputs = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_path_outputs.
svlogParserListener.prototype.exitList_of_path_outputs = function(ctx) {
};


// Enter a parse tree produced by svlogParser#specify_input_terminal_descriptor.
svlogParserListener.prototype.enterSpecify_input_terminal_descriptor = function(ctx) {
};

// Exit a parse tree produced by svlogParser#specify_input_terminal_descriptor.
svlogParserListener.prototype.exitSpecify_input_terminal_descriptor = function(ctx) {
};


// Enter a parse tree produced by svlogParser#specify_output_terminal_descriptor.
svlogParserListener.prototype.enterSpecify_output_terminal_descriptor = function(ctx) {
};

// Exit a parse tree produced by svlogParser#specify_output_terminal_descriptor.
svlogParserListener.prototype.exitSpecify_output_terminal_descriptor = function(ctx) {
};


// Enter a parse tree produced by svlogParser#input_identifier.
svlogParserListener.prototype.enterInput_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#input_identifier.
svlogParserListener.prototype.exitInput_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#output_identifier.
svlogParserListener.prototype.enterOutput_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#output_identifier.
svlogParserListener.prototype.exitOutput_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#path_delay_value.
svlogParserListener.prototype.enterPath_delay_value = function(ctx) {
};

// Exit a parse tree produced by svlogParser#path_delay_value.
svlogParserListener.prototype.exitPath_delay_value = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_path_delay_expressions.
svlogParserListener.prototype.enterList_of_path_delay_expressions = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_path_delay_expressions.
svlogParserListener.prototype.exitList_of_path_delay_expressions = function(ctx) {
};


// Enter a parse tree produced by svlogParser#t_path_delay_expression.
svlogParserListener.prototype.enterT_path_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#t_path_delay_expression.
svlogParserListener.prototype.exitT_path_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#trise_path_delay_expression.
svlogParserListener.prototype.enterTrise_path_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#trise_path_delay_expression.
svlogParserListener.prototype.exitTrise_path_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#tfall_path_delay_expression.
svlogParserListener.prototype.enterTfall_path_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#tfall_path_delay_expression.
svlogParserListener.prototype.exitTfall_path_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#tz_path_delay_expression.
svlogParserListener.prototype.enterTz_path_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#tz_path_delay_expression.
svlogParserListener.prototype.exitTz_path_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#t01_path_delay_expression.
svlogParserListener.prototype.enterT01_path_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#t01_path_delay_expression.
svlogParserListener.prototype.exitT01_path_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#t10_path_delay_expression.
svlogParserListener.prototype.enterT10_path_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#t10_path_delay_expression.
svlogParserListener.prototype.exitT10_path_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#t0z_path_delay_expression.
svlogParserListener.prototype.enterT0z_path_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#t0z_path_delay_expression.
svlogParserListener.prototype.exitT0z_path_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#tz1_path_delay_expression.
svlogParserListener.prototype.enterTz1_path_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#tz1_path_delay_expression.
svlogParserListener.prototype.exitTz1_path_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#t1z_path_delay_expression.
svlogParserListener.prototype.enterT1z_path_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#t1z_path_delay_expression.
svlogParserListener.prototype.exitT1z_path_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#tz0_path_delay_expression.
svlogParserListener.prototype.enterTz0_path_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#tz0_path_delay_expression.
svlogParserListener.prototype.exitTz0_path_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#t0x_path_delay_expression.
svlogParserListener.prototype.enterT0x_path_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#t0x_path_delay_expression.
svlogParserListener.prototype.exitT0x_path_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#tx1_path_delay_expression.
svlogParserListener.prototype.enterTx1_path_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#tx1_path_delay_expression.
svlogParserListener.prototype.exitTx1_path_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#t1x_path_delay_expression.
svlogParserListener.prototype.enterT1x_path_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#t1x_path_delay_expression.
svlogParserListener.prototype.exitT1x_path_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#tx0_path_delay_expression.
svlogParserListener.prototype.enterTx0_path_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#tx0_path_delay_expression.
svlogParserListener.prototype.exitTx0_path_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#txz_path_delay_expression.
svlogParserListener.prototype.enterTxz_path_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#txz_path_delay_expression.
svlogParserListener.prototype.exitTxz_path_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#tzx_path_delay_expression.
svlogParserListener.prototype.enterTzx_path_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#tzx_path_delay_expression.
svlogParserListener.prototype.exitTzx_path_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#path_delay_expression.
svlogParserListener.prototype.enterPath_delay_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#path_delay_expression.
svlogParserListener.prototype.exitPath_delay_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#edge_sensitive_path_declaration.
svlogParserListener.prototype.enterEdge_sensitive_path_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#edge_sensitive_path_declaration.
svlogParserListener.prototype.exitEdge_sensitive_path_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#parallel_edge_sensitive_path_description.
svlogParserListener.prototype.enterParallel_edge_sensitive_path_description = function(ctx) {
};

// Exit a parse tree produced by svlogParser#parallel_edge_sensitive_path_description.
svlogParserListener.prototype.exitParallel_edge_sensitive_path_description = function(ctx) {
};


// Enter a parse tree produced by svlogParser#full_edge_sensitive_path_description.
svlogParserListener.prototype.enterFull_edge_sensitive_path_description = function(ctx) {
};

// Exit a parse tree produced by svlogParser#full_edge_sensitive_path_description.
svlogParserListener.prototype.exitFull_edge_sensitive_path_description = function(ctx) {
};


// Enter a parse tree produced by svlogParser#data_source_expression.
svlogParserListener.prototype.enterData_source_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#data_source_expression.
svlogParserListener.prototype.exitData_source_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#edge_identifier.
svlogParserListener.prototype.enterEdge_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#edge_identifier.
svlogParserListener.prototype.exitEdge_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#state_dependent_path_declaration.
svlogParserListener.prototype.enterState_dependent_path_declaration = function(ctx) {
};

// Exit a parse tree produced by svlogParser#state_dependent_path_declaration.
svlogParserListener.prototype.exitState_dependent_path_declaration = function(ctx) {
};


// Enter a parse tree produced by svlogParser#polarity_operator.
svlogParserListener.prototype.enterPolarity_operator = function(ctx) {
};

// Exit a parse tree produced by svlogParser#polarity_operator.
svlogParserListener.prototype.exitPolarity_operator = function(ctx) {
};


// Enter a parse tree produced by svlogParser#system_timing_check.
svlogParserListener.prototype.enterSystem_timing_check = function(ctx) {
};

// Exit a parse tree produced by svlogParser#system_timing_check.
svlogParserListener.prototype.exitSystem_timing_check = function(ctx) {
};


// Enter a parse tree produced by svlogParser#setup_timing_check.
svlogParserListener.prototype.enterSetup_timing_check = function(ctx) {
};

// Exit a parse tree produced by svlogParser#setup_timing_check.
svlogParserListener.prototype.exitSetup_timing_check = function(ctx) {
};


// Enter a parse tree produced by svlogParser#hold_timing_check.
svlogParserListener.prototype.enterHold_timing_check = function(ctx) {
};

// Exit a parse tree produced by svlogParser#hold_timing_check.
svlogParserListener.prototype.exitHold_timing_check = function(ctx) {
};


// Enter a parse tree produced by svlogParser#setuphold_timing_check.
svlogParserListener.prototype.enterSetuphold_timing_check = function(ctx) {
};

// Exit a parse tree produced by svlogParser#setuphold_timing_check.
svlogParserListener.prototype.exitSetuphold_timing_check = function(ctx) {
};


// Enter a parse tree produced by svlogParser#recovery_timing_check.
svlogParserListener.prototype.enterRecovery_timing_check = function(ctx) {
};

// Exit a parse tree produced by svlogParser#recovery_timing_check.
svlogParserListener.prototype.exitRecovery_timing_check = function(ctx) {
};


// Enter a parse tree produced by svlogParser#removal_timing_check.
svlogParserListener.prototype.enterRemoval_timing_check = function(ctx) {
};

// Exit a parse tree produced by svlogParser#removal_timing_check.
svlogParserListener.prototype.exitRemoval_timing_check = function(ctx) {
};


// Enter a parse tree produced by svlogParser#recrem_timing_check.
svlogParserListener.prototype.enterRecrem_timing_check = function(ctx) {
};

// Exit a parse tree produced by svlogParser#recrem_timing_check.
svlogParserListener.prototype.exitRecrem_timing_check = function(ctx) {
};


// Enter a parse tree produced by svlogParser#skew_timing_check.
svlogParserListener.prototype.enterSkew_timing_check = function(ctx) {
};

// Exit a parse tree produced by svlogParser#skew_timing_check.
svlogParserListener.prototype.exitSkew_timing_check = function(ctx) {
};


// Enter a parse tree produced by svlogParser#timeskew_timing_check.
svlogParserListener.prototype.enterTimeskew_timing_check = function(ctx) {
};

// Exit a parse tree produced by svlogParser#timeskew_timing_check.
svlogParserListener.prototype.exitTimeskew_timing_check = function(ctx) {
};


// Enter a parse tree produced by svlogParser#fullskew_timing_check.
svlogParserListener.prototype.enterFullskew_timing_check = function(ctx) {
};

// Exit a parse tree produced by svlogParser#fullskew_timing_check.
svlogParserListener.prototype.exitFullskew_timing_check = function(ctx) {
};


// Enter a parse tree produced by svlogParser#period_timing_check.
svlogParserListener.prototype.enterPeriod_timing_check = function(ctx) {
};

// Exit a parse tree produced by svlogParser#period_timing_check.
svlogParserListener.prototype.exitPeriod_timing_check = function(ctx) {
};


// Enter a parse tree produced by svlogParser#width_timing_check.
svlogParserListener.prototype.enterWidth_timing_check = function(ctx) {
};

// Exit a parse tree produced by svlogParser#width_timing_check.
svlogParserListener.prototype.exitWidth_timing_check = function(ctx) {
};


// Enter a parse tree produced by svlogParser#nochange_timing_check.
svlogParserListener.prototype.enterNochange_timing_check = function(ctx) {
};

// Exit a parse tree produced by svlogParser#nochange_timing_check.
svlogParserListener.prototype.exitNochange_timing_check = function(ctx) {
};


// Enter a parse tree produced by svlogParser#timecheck_condition.
svlogParserListener.prototype.enterTimecheck_condition = function(ctx) {
};

// Exit a parse tree produced by svlogParser#timecheck_condition.
svlogParserListener.prototype.exitTimecheck_condition = function(ctx) {
};


// Enter a parse tree produced by svlogParser#controlled_reference_event.
svlogParserListener.prototype.enterControlled_reference_event = function(ctx) {
};

// Exit a parse tree produced by svlogParser#controlled_reference_event.
svlogParserListener.prototype.exitControlled_reference_event = function(ctx) {
};


// Enter a parse tree produced by svlogParser#data_event.
svlogParserListener.prototype.enterData_event = function(ctx) {
};

// Exit a parse tree produced by svlogParser#data_event.
svlogParserListener.prototype.exitData_event = function(ctx) {
};


// Enter a parse tree produced by svlogParser#delayed_data.
svlogParserListener.prototype.enterDelayed_data = function(ctx) {
};

// Exit a parse tree produced by svlogParser#delayed_data.
svlogParserListener.prototype.exitDelayed_data = function(ctx) {
};


// Enter a parse tree produced by svlogParser#delayed_reference.
svlogParserListener.prototype.enterDelayed_reference = function(ctx) {
};

// Exit a parse tree produced by svlogParser#delayed_reference.
svlogParserListener.prototype.exitDelayed_reference = function(ctx) {
};


// Enter a parse tree produced by svlogParser#end_edge_offset.
svlogParserListener.prototype.enterEnd_edge_offset = function(ctx) {
};

// Exit a parse tree produced by svlogParser#end_edge_offset.
svlogParserListener.prototype.exitEnd_edge_offset = function(ctx) {
};


// Enter a parse tree produced by svlogParser#event_based_flag.
svlogParserListener.prototype.enterEvent_based_flag = function(ctx) {
};

// Exit a parse tree produced by svlogParser#event_based_flag.
svlogParserListener.prototype.exitEvent_based_flag = function(ctx) {
};


// Enter a parse tree produced by svlogParser#notifier.
svlogParserListener.prototype.enterNotifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#notifier.
svlogParserListener.prototype.exitNotifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#reference_event.
svlogParserListener.prototype.enterReference_event = function(ctx) {
};

// Exit a parse tree produced by svlogParser#reference_event.
svlogParserListener.prototype.exitReference_event = function(ctx) {
};


// Enter a parse tree produced by svlogParser#remain_active_flag.
svlogParserListener.prototype.enterRemain_active_flag = function(ctx) {
};

// Exit a parse tree produced by svlogParser#remain_active_flag.
svlogParserListener.prototype.exitRemain_active_flag = function(ctx) {
};


// Enter a parse tree produced by svlogParser#timestamp_condition.
svlogParserListener.prototype.enterTimestamp_condition = function(ctx) {
};

// Exit a parse tree produced by svlogParser#timestamp_condition.
svlogParserListener.prototype.exitTimestamp_condition = function(ctx) {
};


// Enter a parse tree produced by svlogParser#start_edge_offset.
svlogParserListener.prototype.enterStart_edge_offset = function(ctx) {
};

// Exit a parse tree produced by svlogParser#start_edge_offset.
svlogParserListener.prototype.exitStart_edge_offset = function(ctx) {
};


// Enter a parse tree produced by svlogParser#threshold.
svlogParserListener.prototype.enterThreshold = function(ctx) {
};

// Exit a parse tree produced by svlogParser#threshold.
svlogParserListener.prototype.exitThreshold = function(ctx) {
};


// Enter a parse tree produced by svlogParser#timing_check_limit.
svlogParserListener.prototype.enterTiming_check_limit = function(ctx) {
};

// Exit a parse tree produced by svlogParser#timing_check_limit.
svlogParserListener.prototype.exitTiming_check_limit = function(ctx) {
};


// Enter a parse tree produced by svlogParser#timing_check_event.
svlogParserListener.prototype.enterTiming_check_event = function(ctx) {
};

// Exit a parse tree produced by svlogParser#timing_check_event.
svlogParserListener.prototype.exitTiming_check_event = function(ctx) {
};


// Enter a parse tree produced by svlogParser#controlled_timing_check_event.
svlogParserListener.prototype.enterControlled_timing_check_event = function(ctx) {
};

// Exit a parse tree produced by svlogParser#controlled_timing_check_event.
svlogParserListener.prototype.exitControlled_timing_check_event = function(ctx) {
};


// Enter a parse tree produced by svlogParser#timing_check_event_control.
svlogParserListener.prototype.enterTiming_check_event_control = function(ctx) {
};

// Exit a parse tree produced by svlogParser#timing_check_event_control.
svlogParserListener.prototype.exitTiming_check_event_control = function(ctx) {
};


// Enter a parse tree produced by svlogParser#specify_terminal_descriptor.
svlogParserListener.prototype.enterSpecify_terminal_descriptor = function(ctx) {
};

// Exit a parse tree produced by svlogParser#specify_terminal_descriptor.
svlogParserListener.prototype.exitSpecify_terminal_descriptor = function(ctx) {
};


// Enter a parse tree produced by svlogParser#edge_control_specifier.
svlogParserListener.prototype.enterEdge_control_specifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#edge_control_specifier.
svlogParserListener.prototype.exitEdge_control_specifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#edge_descriptor.
svlogParserListener.prototype.enterEdge_descriptor = function(ctx) {
};

// Exit a parse tree produced by svlogParser#edge_descriptor.
svlogParserListener.prototype.exitEdge_descriptor = function(ctx) {
};


// Enter a parse tree produced by svlogParser#timing_check_condition.
svlogParserListener.prototype.enterTiming_check_condition = function(ctx) {
};

// Exit a parse tree produced by svlogParser#timing_check_condition.
svlogParserListener.prototype.exitTiming_check_condition = function(ctx) {
};


// Enter a parse tree produced by svlogParser#scalar_timing_check_condition.
svlogParserListener.prototype.enterScalar_timing_check_condition = function(ctx) {
};

// Exit a parse tree produced by svlogParser#scalar_timing_check_condition.
svlogParserListener.prototype.exitScalar_timing_check_condition = function(ctx) {
};


// Enter a parse tree produced by svlogParser#scalar_constant.
svlogParserListener.prototype.enterScalar_constant = function(ctx) {
};

// Exit a parse tree produced by svlogParser#scalar_constant.
svlogParserListener.prototype.exitScalar_constant = function(ctx) {
};


// Enter a parse tree produced by svlogParser#concatenation.
svlogParserListener.prototype.enterConcatenation = function(ctx) {
};

// Exit a parse tree produced by svlogParser#concatenation.
svlogParserListener.prototype.exitConcatenation = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constant_concatenation.
svlogParserListener.prototype.enterConstant_concatenation = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constant_concatenation.
svlogParserListener.prototype.exitConstant_concatenation = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constant_multiple_concatenation.
svlogParserListener.prototype.enterConstant_multiple_concatenation = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constant_multiple_concatenation.
svlogParserListener.prototype.exitConstant_multiple_concatenation = function(ctx) {
};


// Enter a parse tree produced by svlogParser#module_path_concatenation.
svlogParserListener.prototype.enterModule_path_concatenation = function(ctx) {
};

// Exit a parse tree produced by svlogParser#module_path_concatenation.
svlogParserListener.prototype.exitModule_path_concatenation = function(ctx) {
};


// Enter a parse tree produced by svlogParser#module_path_multiple_concatenation.
svlogParserListener.prototype.enterModule_path_multiple_concatenation = function(ctx) {
};

// Exit a parse tree produced by svlogParser#module_path_multiple_concatenation.
svlogParserListener.prototype.exitModule_path_multiple_concatenation = function(ctx) {
};


// Enter a parse tree produced by svlogParser#multiple_concatenation.
svlogParserListener.prototype.enterMultiple_concatenation = function(ctx) {
};

// Exit a parse tree produced by svlogParser#multiple_concatenation.
svlogParserListener.prototype.exitMultiple_concatenation = function(ctx) {
};


// Enter a parse tree produced by svlogParser#streaming_concatenation.
svlogParserListener.prototype.enterStreaming_concatenation = function(ctx) {
};

// Exit a parse tree produced by svlogParser#streaming_concatenation.
svlogParserListener.prototype.exitStreaming_concatenation = function(ctx) {
};


// Enter a parse tree produced by svlogParser#stream_operator.
svlogParserListener.prototype.enterStream_operator = function(ctx) {
};

// Exit a parse tree produced by svlogParser#stream_operator.
svlogParserListener.prototype.exitStream_operator = function(ctx) {
};


// Enter a parse tree produced by svlogParser#slice_size.
svlogParserListener.prototype.enterSlice_size = function(ctx) {
};

// Exit a parse tree produced by svlogParser#slice_size.
svlogParserListener.prototype.exitSlice_size = function(ctx) {
};


// Enter a parse tree produced by svlogParser#stream_concatenation.
svlogParserListener.prototype.enterStream_concatenation = function(ctx) {
};

// Exit a parse tree produced by svlogParser#stream_concatenation.
svlogParserListener.prototype.exitStream_concatenation = function(ctx) {
};


// Enter a parse tree produced by svlogParser#stream_expression.
svlogParserListener.prototype.enterStream_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#stream_expression.
svlogParserListener.prototype.exitStream_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#array_range_expression.
svlogParserListener.prototype.enterArray_range_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#array_range_expression.
svlogParserListener.prototype.exitArray_range_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#empty_unpacked_array_concatenation.
svlogParserListener.prototype.enterEmpty_unpacked_array_concatenation = function(ctx) {
};

// Exit a parse tree produced by svlogParser#empty_unpacked_array_concatenation.
svlogParserListener.prototype.exitEmpty_unpacked_array_concatenation = function(ctx) {
};


// Enter a parse tree produced by svlogParser#tf_call.
svlogParserListener.prototype.enterTf_call = function(ctx) {
};

// Exit a parse tree produced by svlogParser#tf_call.
svlogParserListener.prototype.exitTf_call = function(ctx) {
};


// Enter a parse tree produced by svlogParser#system_tf_call.
svlogParserListener.prototype.enterSystem_tf_call = function(ctx) {
};

// Exit a parse tree produced by svlogParser#system_tf_call.
svlogParserListener.prototype.exitSystem_tf_call = function(ctx) {
};


// Enter a parse tree produced by svlogParser#subroutine_call.
svlogParserListener.prototype.enterSubroutine_call = function(ctx) {
};

// Exit a parse tree produced by svlogParser#subroutine_call.
svlogParserListener.prototype.exitSubroutine_call = function(ctx) {
};


// Enter a parse tree produced by svlogParser#function_subroutine_call.
svlogParserListener.prototype.enterFunction_subroutine_call = function(ctx) {
};

// Exit a parse tree produced by svlogParser#function_subroutine_call.
svlogParserListener.prototype.exitFunction_subroutine_call = function(ctx) {
};


// Enter a parse tree produced by svlogParser#list_of_arguments.
svlogParserListener.prototype.enterList_of_arguments = function(ctx) {
};

// Exit a parse tree produced by svlogParser#list_of_arguments.
svlogParserListener.prototype.exitList_of_arguments = function(ctx) {
};


// Enter a parse tree produced by svlogParser#method_call.
svlogParserListener.prototype.enterMethod_call = function(ctx) {
};

// Exit a parse tree produced by svlogParser#method_call.
svlogParserListener.prototype.exitMethod_call = function(ctx) {
};


// Enter a parse tree produced by svlogParser#method_call_body.
svlogParserListener.prototype.enterMethod_call_body = function(ctx) {
};

// Exit a parse tree produced by svlogParser#method_call_body.
svlogParserListener.prototype.exitMethod_call_body = function(ctx) {
};


// Enter a parse tree produced by svlogParser#built_in_method_call.
svlogParserListener.prototype.enterBuilt_in_method_call = function(ctx) {
};

// Exit a parse tree produced by svlogParser#built_in_method_call.
svlogParserListener.prototype.exitBuilt_in_method_call = function(ctx) {
};


// Enter a parse tree produced by svlogParser#array_manipulation_call.
svlogParserListener.prototype.enterArray_manipulation_call = function(ctx) {
};

// Exit a parse tree produced by svlogParser#array_manipulation_call.
svlogParserListener.prototype.exitArray_manipulation_call = function(ctx) {
};


// Enter a parse tree produced by svlogParser#randomize_call.
svlogParserListener.prototype.enterRandomize_call = function(ctx) {
};

// Exit a parse tree produced by svlogParser#randomize_call.
svlogParserListener.prototype.exitRandomize_call = function(ctx) {
};


// Enter a parse tree produced by svlogParser#method_call_root.
svlogParserListener.prototype.enterMethod_call_root = function(ctx) {
};

// Exit a parse tree produced by svlogParser#method_call_root.
svlogParserListener.prototype.exitMethod_call_root = function(ctx) {
};


// Enter a parse tree produced by svlogParser#array_method_name.
svlogParserListener.prototype.enterArray_method_name = function(ctx) {
};

// Exit a parse tree produced by svlogParser#array_method_name.
svlogParserListener.prototype.exitArray_method_name = function(ctx) {
};


// Enter a parse tree produced by svlogParser#inc_or_dec_expression.
svlogParserListener.prototype.enterInc_or_dec_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#inc_or_dec_expression.
svlogParserListener.prototype.exitInc_or_dec_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constant_expression.
svlogParserListener.prototype.enterConstant_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constant_expression.
svlogParserListener.prototype.exitConstant_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constant_mintypmax_expression.
svlogParserListener.prototype.enterConstant_mintypmax_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constant_mintypmax_expression.
svlogParserListener.prototype.exitConstant_mintypmax_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constant_param_expression.
svlogParserListener.prototype.enterConstant_param_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constant_param_expression.
svlogParserListener.prototype.exitConstant_param_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#param_expression.
svlogParserListener.prototype.enterParam_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#param_expression.
svlogParserListener.prototype.exitParam_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constant_range_expression.
svlogParserListener.prototype.enterConstant_range_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constant_range_expression.
svlogParserListener.prototype.exitConstant_range_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constant_part_select_range.
svlogParserListener.prototype.enterConstant_part_select_range = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constant_part_select_range.
svlogParserListener.prototype.exitConstant_part_select_range = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constant_range.
svlogParserListener.prototype.enterConstant_range = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constant_range.
svlogParserListener.prototype.exitConstant_range = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constant_indexed_range.
svlogParserListener.prototype.enterConstant_indexed_range = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constant_indexed_range.
svlogParserListener.prototype.exitConstant_indexed_range = function(ctx) {
};


// Enter a parse tree produced by svlogParser#expression.
svlogParserListener.prototype.enterExpression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#expression.
svlogParserListener.prototype.exitExpression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#value_range.
svlogParserListener.prototype.enterValue_range = function(ctx) {
};

// Exit a parse tree produced by svlogParser#value_range.
svlogParserListener.prototype.exitValue_range = function(ctx) {
};


// Enter a parse tree produced by svlogParser#mintypmax_expression.
svlogParserListener.prototype.enterMintypmax_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#mintypmax_expression.
svlogParserListener.prototype.exitMintypmax_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#module_path_expression.
svlogParserListener.prototype.enterModule_path_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#module_path_expression.
svlogParserListener.prototype.exitModule_path_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#module_path_mintypmax_expression.
svlogParserListener.prototype.enterModule_path_mintypmax_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#module_path_mintypmax_expression.
svlogParserListener.prototype.exitModule_path_mintypmax_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#part_select_range.
svlogParserListener.prototype.enterPart_select_range = function(ctx) {
};

// Exit a parse tree produced by svlogParser#part_select_range.
svlogParserListener.prototype.exitPart_select_range = function(ctx) {
};


// Enter a parse tree produced by svlogParser#indexed_range.
svlogParserListener.prototype.enterIndexed_range = function(ctx) {
};

// Exit a parse tree produced by svlogParser#indexed_range.
svlogParserListener.prototype.exitIndexed_range = function(ctx) {
};


// Enter a parse tree produced by svlogParser#genvar_expression.
svlogParserListener.prototype.enterGenvar_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#genvar_expression.
svlogParserListener.prototype.exitGenvar_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constant_primary.
svlogParserListener.prototype.enterConstant_primary = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constant_primary.
svlogParserListener.prototype.exitConstant_primary = function(ctx) {
};


// Enter a parse tree produced by svlogParser#module_path_primary.
svlogParserListener.prototype.enterModule_path_primary = function(ctx) {
};

// Exit a parse tree produced by svlogParser#module_path_primary.
svlogParserListener.prototype.exitModule_path_primary = function(ctx) {
};


// Enter a parse tree produced by svlogParser#primary.
svlogParserListener.prototype.enterPrimary = function(ctx) {
};

// Exit a parse tree produced by svlogParser#primary.
svlogParserListener.prototype.exitPrimary = function(ctx) {
};


// Enter a parse tree produced by svlogParser#class_qualifier.
svlogParserListener.prototype.enterClass_qualifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#class_qualifier.
svlogParserListener.prototype.exitClass_qualifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#range_expression.
svlogParserListener.prototype.enterRange_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#range_expression.
svlogParserListener.prototype.exitRange_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#primary_literal.
svlogParserListener.prototype.enterPrimary_literal = function(ctx) {
};

// Exit a parse tree produced by svlogParser#primary_literal.
svlogParserListener.prototype.exitPrimary_literal = function(ctx) {
};


// Enter a parse tree produced by svlogParser#time_literal.
svlogParserListener.prototype.enterTime_literal = function(ctx) {
};

// Exit a parse tree produced by svlogParser#time_literal.
svlogParserListener.prototype.exitTime_literal = function(ctx) {
};


// Enter a parse tree produced by svlogParser#implicit_class_handle.
svlogParserListener.prototype.enterImplicit_class_handle = function(ctx) {
};

// Exit a parse tree produced by svlogParser#implicit_class_handle.
svlogParserListener.prototype.exitImplicit_class_handle = function(ctx) {
};


// Enter a parse tree produced by svlogParser#bit_select.
svlogParserListener.prototype.enterBit_select = function(ctx) {
};

// Exit a parse tree produced by svlogParser#bit_select.
svlogParserListener.prototype.exitBit_select = function(ctx) {
};


// Enter a parse tree produced by svlogParser#select_.
svlogParserListener.prototype.enterSelect_ = function(ctx) {
};

// Exit a parse tree produced by svlogParser#select_.
svlogParserListener.prototype.exitSelect_ = function(ctx) {
};


// Enter a parse tree produced by svlogParser#nonrange_select.
svlogParserListener.prototype.enterNonrange_select = function(ctx) {
};

// Exit a parse tree produced by svlogParser#nonrange_select.
svlogParserListener.prototype.exitNonrange_select = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constant_bit_select.
svlogParserListener.prototype.enterConstant_bit_select = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constant_bit_select.
svlogParserListener.prototype.exitConstant_bit_select = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constant_select.
svlogParserListener.prototype.enterConstant_select = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constant_select.
svlogParserListener.prototype.exitConstant_select = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constant_let_expression.
svlogParserListener.prototype.enterConstant_let_expression = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constant_let_expression.
svlogParserListener.prototype.exitConstant_let_expression = function(ctx) {
};


// Enter a parse tree produced by svlogParser#net_lvalue.
svlogParserListener.prototype.enterNet_lvalue = function(ctx) {
};

// Exit a parse tree produced by svlogParser#net_lvalue.
svlogParserListener.prototype.exitNet_lvalue = function(ctx) {
};


// Enter a parse tree produced by svlogParser#variable_lvalue.
svlogParserListener.prototype.enterVariable_lvalue = function(ctx) {
};

// Exit a parse tree produced by svlogParser#variable_lvalue.
svlogParserListener.prototype.exitVariable_lvalue = function(ctx) {
};


// Enter a parse tree produced by svlogParser#nonrange_variable_lvalue.
svlogParserListener.prototype.enterNonrange_variable_lvalue = function(ctx) {
};

// Exit a parse tree produced by svlogParser#nonrange_variable_lvalue.
svlogParserListener.prototype.exitNonrange_variable_lvalue = function(ctx) {
};


// Enter a parse tree produced by svlogParser#unary_operator.
svlogParserListener.prototype.enterUnary_operator = function(ctx) {
};

// Exit a parse tree produced by svlogParser#unary_operator.
svlogParserListener.prototype.exitUnary_operator = function(ctx) {
};


// Enter a parse tree produced by svlogParser#binary_operator.
svlogParserListener.prototype.enterBinary_operator = function(ctx) {
};

// Exit a parse tree produced by svlogParser#binary_operator.
svlogParserListener.prototype.exitBinary_operator = function(ctx) {
};


// Enter a parse tree produced by svlogParser#inc_or_dec_operator.
svlogParserListener.prototype.enterInc_or_dec_operator = function(ctx) {
};

// Exit a parse tree produced by svlogParser#inc_or_dec_operator.
svlogParserListener.prototype.exitInc_or_dec_operator = function(ctx) {
};


// Enter a parse tree produced by svlogParser#unary_module_path_operator.
svlogParserListener.prototype.enterUnary_module_path_operator = function(ctx) {
};

// Exit a parse tree produced by svlogParser#unary_module_path_operator.
svlogParserListener.prototype.exitUnary_module_path_operator = function(ctx) {
};


// Enter a parse tree produced by svlogParser#binary_module_path_operator.
svlogParserListener.prototype.enterBinary_module_path_operator = function(ctx) {
};

// Exit a parse tree produced by svlogParser#binary_module_path_operator.
svlogParserListener.prototype.exitBinary_module_path_operator = function(ctx) {
};


// Enter a parse tree produced by svlogParser#number.
svlogParserListener.prototype.enterNumber = function(ctx) {
};

// Exit a parse tree produced by svlogParser#number.
svlogParserListener.prototype.exitNumber = function(ctx) {
};


// Enter a parse tree produced by svlogParser#integral_number.
svlogParserListener.prototype.enterIntegral_number = function(ctx) {
};

// Exit a parse tree produced by svlogParser#integral_number.
svlogParserListener.prototype.exitIntegral_number = function(ctx) {
};


// Enter a parse tree produced by svlogParser#decimal_number.
svlogParserListener.prototype.enterDecimal_number = function(ctx) {
};

// Exit a parse tree produced by svlogParser#decimal_number.
svlogParserListener.prototype.exitDecimal_number = function(ctx) {
};


// Enter a parse tree produced by svlogParser#binary_number.
svlogParserListener.prototype.enterBinary_number = function(ctx) {
};

// Exit a parse tree produced by svlogParser#binary_number.
svlogParserListener.prototype.exitBinary_number = function(ctx) {
};


// Enter a parse tree produced by svlogParser#octal_number.
svlogParserListener.prototype.enterOctal_number = function(ctx) {
};

// Exit a parse tree produced by svlogParser#octal_number.
svlogParserListener.prototype.exitOctal_number = function(ctx) {
};


// Enter a parse tree produced by svlogParser#hex_number.
svlogParserListener.prototype.enterHex_number = function(ctx) {
};

// Exit a parse tree produced by svlogParser#hex_number.
svlogParserListener.prototype.exitHex_number = function(ctx) {
};


// Enter a parse tree produced by svlogParser#real_number.
svlogParserListener.prototype.enterReal_number = function(ctx) {
};

// Exit a parse tree produced by svlogParser#real_number.
svlogParserListener.prototype.exitReal_number = function(ctx) {
};


// Enter a parse tree produced by svlogParser#unsigned_number.
svlogParserListener.prototype.enterUnsigned_number = function(ctx) {
};

// Exit a parse tree produced by svlogParser#unsigned_number.
svlogParserListener.prototype.exitUnsigned_number = function(ctx) {
};


// Enter a parse tree produced by svlogParser#unbased_unsized_literal.
svlogParserListener.prototype.enterUnbased_unsized_literal = function(ctx) {
};

// Exit a parse tree produced by svlogParser#unbased_unsized_literal.
svlogParserListener.prototype.exitUnbased_unsized_literal = function(ctx) {
};


// Enter a parse tree produced by svlogParser#string_literal.
svlogParserListener.prototype.enterString_literal = function(ctx) {
};

// Exit a parse tree produced by svlogParser#string_literal.
svlogParserListener.prototype.exitString_literal = function(ctx) {
};


// Enter a parse tree produced by svlogParser#attribute_instance.
svlogParserListener.prototype.enterAttribute_instance = function(ctx) {
};

// Exit a parse tree produced by svlogParser#attribute_instance.
svlogParserListener.prototype.exitAttribute_instance = function(ctx) {
};


// Enter a parse tree produced by svlogParser#attr_spec.
svlogParserListener.prototype.enterAttr_spec = function(ctx) {
};

// Exit a parse tree produced by svlogParser#attr_spec.
svlogParserListener.prototype.exitAttr_spec = function(ctx) {
};


// Enter a parse tree produced by svlogParser#attr_name.
svlogParserListener.prototype.enterAttr_name = function(ctx) {
};

// Exit a parse tree produced by svlogParser#attr_name.
svlogParserListener.prototype.exitAttr_name = function(ctx) {
};


// Enter a parse tree produced by svlogParser#array_identifier.
svlogParserListener.prototype.enterArray_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#array_identifier.
svlogParserListener.prototype.exitArray_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#block_identifier.
svlogParserListener.prototype.enterBlock_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#block_identifier.
svlogParserListener.prototype.exitBlock_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#bin_identifier.
svlogParserListener.prototype.enterBin_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#bin_identifier.
svlogParserListener.prototype.exitBin_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#c_identifier.
svlogParserListener.prototype.enterC_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#c_identifier.
svlogParserListener.prototype.exitC_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cell_identifier.
svlogParserListener.prototype.enterCell_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cell_identifier.
svlogParserListener.prototype.exitCell_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#checker_identifier.
svlogParserListener.prototype.enterChecker_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#checker_identifier.
svlogParserListener.prototype.exitChecker_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#class_identifier.
svlogParserListener.prototype.enterClass_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#class_identifier.
svlogParserListener.prototype.exitClass_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#class_variable_identifier.
svlogParserListener.prototype.enterClass_variable_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#class_variable_identifier.
svlogParserListener.prototype.exitClass_variable_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#clocking_identifier.
svlogParserListener.prototype.enterClocking_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#clocking_identifier.
svlogParserListener.prototype.exitClocking_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#config_identifier.
svlogParserListener.prototype.enterConfig_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#config_identifier.
svlogParserListener.prototype.exitConfig_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#const_identifier.
svlogParserListener.prototype.enterConst_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#const_identifier.
svlogParserListener.prototype.exitConst_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#constraint_identifier.
svlogParserListener.prototype.enterConstraint_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#constraint_identifier.
svlogParserListener.prototype.exitConstraint_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#covergroup_identifier.
svlogParserListener.prototype.enterCovergroup_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#covergroup_identifier.
svlogParserListener.prototype.exitCovergroup_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#covergroup_variable_identifier.
svlogParserListener.prototype.enterCovergroup_variable_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#covergroup_variable_identifier.
svlogParserListener.prototype.exitCovergroup_variable_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cover_point_identifier.
svlogParserListener.prototype.enterCover_point_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cover_point_identifier.
svlogParserListener.prototype.exitCover_point_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#cross_identifier.
svlogParserListener.prototype.enterCross_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#cross_identifier.
svlogParserListener.prototype.exitCross_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#dynamic_array_variable_identifier.
svlogParserListener.prototype.enterDynamic_array_variable_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#dynamic_array_variable_identifier.
svlogParserListener.prototype.exitDynamic_array_variable_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#enum_identifier.
svlogParserListener.prototype.enterEnum_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#enum_identifier.
svlogParserListener.prototype.exitEnum_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#escaped_identifier.
svlogParserListener.prototype.enterEscaped_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#escaped_identifier.
svlogParserListener.prototype.exitEscaped_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#formal_identifier.
svlogParserListener.prototype.enterFormal_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#formal_identifier.
svlogParserListener.prototype.exitFormal_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#formal_port_identifier.
svlogParserListener.prototype.enterFormal_port_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#formal_port_identifier.
svlogParserListener.prototype.exitFormal_port_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#function_identifier.
svlogParserListener.prototype.enterFunction_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#function_identifier.
svlogParserListener.prototype.exitFunction_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#generate_block_identifier.
svlogParserListener.prototype.enterGenerate_block_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#generate_block_identifier.
svlogParserListener.prototype.exitGenerate_block_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#genvar_identifier.
svlogParserListener.prototype.enterGenvar_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#genvar_identifier.
svlogParserListener.prototype.exitGenvar_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#hierarchical_array_identifier.
svlogParserListener.prototype.enterHierarchical_array_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#hierarchical_array_identifier.
svlogParserListener.prototype.exitHierarchical_array_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#hierarchical_block_identifier.
svlogParserListener.prototype.enterHierarchical_block_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#hierarchical_block_identifier.
svlogParserListener.prototype.exitHierarchical_block_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#hierarchical_event_identifier.
svlogParserListener.prototype.enterHierarchical_event_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#hierarchical_event_identifier.
svlogParserListener.prototype.exitHierarchical_event_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#hierarchical_identifier.
svlogParserListener.prototype.enterHierarchical_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#hierarchical_identifier.
svlogParserListener.prototype.exitHierarchical_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#hierarchical_net_identifier.
svlogParserListener.prototype.enterHierarchical_net_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#hierarchical_net_identifier.
svlogParserListener.prototype.exitHierarchical_net_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#hierarchical_parameter_identifier.
svlogParserListener.prototype.enterHierarchical_parameter_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#hierarchical_parameter_identifier.
svlogParserListener.prototype.exitHierarchical_parameter_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#hierarchical_property_identifier.
svlogParserListener.prototype.enterHierarchical_property_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#hierarchical_property_identifier.
svlogParserListener.prototype.exitHierarchical_property_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#hierarchical_sequence_identifier.
svlogParserListener.prototype.enterHierarchical_sequence_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#hierarchical_sequence_identifier.
svlogParserListener.prototype.exitHierarchical_sequence_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#hierarchical_task_identifier.
svlogParserListener.prototype.enterHierarchical_task_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#hierarchical_task_identifier.
svlogParserListener.prototype.exitHierarchical_task_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#hierarchical_tf_identifier.
svlogParserListener.prototype.enterHierarchical_tf_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#hierarchical_tf_identifier.
svlogParserListener.prototype.exitHierarchical_tf_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#hierarchical_variable_identifier.
svlogParserListener.prototype.enterHierarchical_variable_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#hierarchical_variable_identifier.
svlogParserListener.prototype.exitHierarchical_variable_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#identifier.
svlogParserListener.prototype.enterIdentifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#identifier.
svlogParserListener.prototype.exitIdentifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#index_variable_identifier.
svlogParserListener.prototype.enterIndex_variable_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#index_variable_identifier.
svlogParserListener.prototype.exitIndex_variable_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#interface_identifier.
svlogParserListener.prototype.enterInterface_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#interface_identifier.
svlogParserListener.prototype.exitInterface_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#interface_instance_identifier.
svlogParserListener.prototype.enterInterface_instance_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#interface_instance_identifier.
svlogParserListener.prototype.exitInterface_instance_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#inout_port_identifier.
svlogParserListener.prototype.enterInout_port_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#inout_port_identifier.
svlogParserListener.prototype.exitInout_port_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#input_port_identifier.
svlogParserListener.prototype.enterInput_port_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#input_port_identifier.
svlogParserListener.prototype.exitInput_port_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#instance_identifier.
svlogParserListener.prototype.enterInstance_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#instance_identifier.
svlogParserListener.prototype.exitInstance_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#library_identifier.
svlogParserListener.prototype.enterLibrary_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#library_identifier.
svlogParserListener.prototype.exitLibrary_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#member_identifier.
svlogParserListener.prototype.enterMember_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#member_identifier.
svlogParserListener.prototype.exitMember_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#method_identifier.
svlogParserListener.prototype.enterMethod_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#method_identifier.
svlogParserListener.prototype.exitMethod_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#modport_identifier.
svlogParserListener.prototype.enterModport_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#modport_identifier.
svlogParserListener.prototype.exitModport_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#module_identifier.
svlogParserListener.prototype.enterModule_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#module_identifier.
svlogParserListener.prototype.exitModule_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#net_identifier.
svlogParserListener.prototype.enterNet_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#net_identifier.
svlogParserListener.prototype.exitNet_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#net_type_identifier.
svlogParserListener.prototype.enterNet_type_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#net_type_identifier.
svlogParserListener.prototype.exitNet_type_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#output_port_identifier.
svlogParserListener.prototype.enterOutput_port_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#output_port_identifier.
svlogParserListener.prototype.exitOutput_port_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#package_identifier.
svlogParserListener.prototype.enterPackage_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#package_identifier.
svlogParserListener.prototype.exitPackage_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#package_scope.
svlogParserListener.prototype.enterPackage_scope = function(ctx) {
};

// Exit a parse tree produced by svlogParser#package_scope.
svlogParserListener.prototype.exitPackage_scope = function(ctx) {
};


// Enter a parse tree produced by svlogParser#parameter_identifier.
svlogParserListener.prototype.enterParameter_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#parameter_identifier.
svlogParserListener.prototype.exitParameter_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#port_identifier.
svlogParserListener.prototype.enterPort_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#port_identifier.
svlogParserListener.prototype.exitPort_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#production_identifier.
svlogParserListener.prototype.enterProduction_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#production_identifier.
svlogParserListener.prototype.exitProduction_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#program_identifier.
svlogParserListener.prototype.enterProgram_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#program_identifier.
svlogParserListener.prototype.exitProgram_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#property_identifier.
svlogParserListener.prototype.enterProperty_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#property_identifier.
svlogParserListener.prototype.exitProperty_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ps_class_identifier.
svlogParserListener.prototype.enterPs_class_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ps_class_identifier.
svlogParserListener.prototype.exitPs_class_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ps_covergroup_identifier.
svlogParserListener.prototype.enterPs_covergroup_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ps_covergroup_identifier.
svlogParserListener.prototype.exitPs_covergroup_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ps_checker_identifier.
svlogParserListener.prototype.enterPs_checker_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ps_checker_identifier.
svlogParserListener.prototype.exitPs_checker_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ps_identifier.
svlogParserListener.prototype.enterPs_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ps_identifier.
svlogParserListener.prototype.exitPs_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ps_or_hierarchical_array_identifier.
svlogParserListener.prototype.enterPs_or_hierarchical_array_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ps_or_hierarchical_array_identifier.
svlogParserListener.prototype.exitPs_or_hierarchical_array_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ps_or_hierarchical_net_identifier.
svlogParserListener.prototype.enterPs_or_hierarchical_net_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ps_or_hierarchical_net_identifier.
svlogParserListener.prototype.exitPs_or_hierarchical_net_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ps_or_hierarchical_property_identifier.
svlogParserListener.prototype.enterPs_or_hierarchical_property_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ps_or_hierarchical_property_identifier.
svlogParserListener.prototype.exitPs_or_hierarchical_property_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ps_or_hierarchical_sequence_identifier.
svlogParserListener.prototype.enterPs_or_hierarchical_sequence_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ps_or_hierarchical_sequence_identifier.
svlogParserListener.prototype.exitPs_or_hierarchical_sequence_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ps_or_hierarchical_tf_identifier.
svlogParserListener.prototype.enterPs_or_hierarchical_tf_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ps_or_hierarchical_tf_identifier.
svlogParserListener.prototype.exitPs_or_hierarchical_tf_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ps_parameter_identifier.
svlogParserListener.prototype.enterPs_parameter_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ps_parameter_identifier.
svlogParserListener.prototype.exitPs_parameter_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#ps_type_identifier.
svlogParserListener.prototype.enterPs_type_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#ps_type_identifier.
svlogParserListener.prototype.exitPs_type_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#sequence_identifier.
svlogParserListener.prototype.enterSequence_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#sequence_identifier.
svlogParserListener.prototype.exitSequence_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#signal_identifier.
svlogParserListener.prototype.enterSignal_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#signal_identifier.
svlogParserListener.prototype.exitSignal_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#simple_identifier.
svlogParserListener.prototype.enterSimple_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#simple_identifier.
svlogParserListener.prototype.exitSimple_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#macro_usage_identifier.
svlogParserListener.prototype.enterMacro_usage_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#macro_usage_identifier.
svlogParserListener.prototype.exitMacro_usage_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#specparam_identifier.
svlogParserListener.prototype.enterSpecparam_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#specparam_identifier.
svlogParserListener.prototype.exitSpecparam_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#system_tf_identifier.
svlogParserListener.prototype.enterSystem_tf_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#system_tf_identifier.
svlogParserListener.prototype.exitSystem_tf_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#task_identifier.
svlogParserListener.prototype.enterTask_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#task_identifier.
svlogParserListener.prototype.exitTask_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#tf_identifier.
svlogParserListener.prototype.enterTf_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#tf_identifier.
svlogParserListener.prototype.exitTf_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#terminal_identifier.
svlogParserListener.prototype.enterTerminal_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#terminal_identifier.
svlogParserListener.prototype.exitTerminal_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#topmodule_identifier.
svlogParserListener.prototype.enterTopmodule_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#topmodule_identifier.
svlogParserListener.prototype.exitTopmodule_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#type_identifier.
svlogParserListener.prototype.enterType_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#type_identifier.
svlogParserListener.prototype.exitType_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#udp_identifier.
svlogParserListener.prototype.enterUdp_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#udp_identifier.
svlogParserListener.prototype.exitUdp_identifier = function(ctx) {
};


// Enter a parse tree produced by svlogParser#variable_identifier.
svlogParserListener.prototype.enterVariable_identifier = function(ctx) {
};

// Exit a parse tree produced by svlogParser#variable_identifier.
svlogParserListener.prototype.exitVariable_identifier = function(ctx) {
};



exports.svlogParserListener = svlogParserListener;